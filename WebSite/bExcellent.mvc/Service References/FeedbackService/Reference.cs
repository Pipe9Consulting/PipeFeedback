//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace bExcellent.mvc.FeedbackService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Module", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Domain")]
    [System.SerializableAttribute()]
    public partial class Module : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModuleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleIntroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModuleOrderNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POEIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bExcellent.mvc.FeedbackService.Question[] QuestionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IndexType {
            get {
                return this.IndexTypeField;
            }
            set {
                if ((this.IndexTypeField.Equals(value) != true)) {
                    this.IndexTypeField = value;
                    this.RaisePropertyChanged("IndexType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyAction {
            get {
                return this.KeyActionField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyActionField, value) != true)) {
                    this.KeyActionField = value;
                    this.RaisePropertyChanged("KeyAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModuleId {
            get {
                return this.ModuleIdField;
            }
            set {
                if ((this.ModuleIdField.Equals(value) != true)) {
                    this.ModuleIdField = value;
                    this.RaisePropertyChanged("ModuleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleIntro {
            get {
                return this.ModuleIntroField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleIntroField, value) != true)) {
                    this.ModuleIntroField = value;
                    this.RaisePropertyChanged("ModuleIntro");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleName {
            get {
                return this.ModuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleNameField, value) != true)) {
                    this.ModuleNameField = value;
                    this.RaisePropertyChanged("ModuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModuleOrderNumber {
            get {
                return this.ModuleOrderNumberField;
            }
            set {
                if ((this.ModuleOrderNumberField.Equals(value) != true)) {
                    this.ModuleOrderNumberField = value;
                    this.RaisePropertyChanged("ModuleOrderNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POEId {
            get {
                return this.POEIdField;
            }
            set {
                if ((this.POEIdField.Equals(value) != true)) {
                    this.POEIdField = value;
                    this.RaisePropertyChanged("POEId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bExcellent.mvc.FeedbackService.Question[] Questions {
            get {
                return this.QuestionsField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionsField, value) != true)) {
                    this.QuestionsField = value;
                    this.RaisePropertyChanged("Questions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Question", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Domain")]
    [System.SerializableAttribute()]
    public partial class Question : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBarrierQuestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionOrderNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuetionTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SideBarTitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Answer {
            get {
                return this.AnswerField;
            }
            set {
                if ((this.AnswerField.Equals(value) != true)) {
                    this.AnswerField = value;
                    this.RaisePropertyChanged("Answer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBarrierQuestion {
            get {
                return this.IsBarrierQuestionField;
            }
            set {
                if ((this.IsBarrierQuestionField.Equals(value) != true)) {
                    this.IsBarrierQuestionField = value;
                    this.RaisePropertyChanged("IsBarrierQuestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionId {
            get {
                return this.QuestionIdField;
            }
            set {
                if ((this.QuestionIdField.Equals(value) != true)) {
                    this.QuestionIdField = value;
                    this.RaisePropertyChanged("QuestionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionOrderNumber {
            get {
                return this.QuestionOrderNumberField;
            }
            set {
                if ((this.QuestionOrderNumberField.Equals(value) != true)) {
                    this.QuestionOrderNumberField = value;
                    this.RaisePropertyChanged("QuestionOrderNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuetionText {
            get {
                return this.QuetionTextField;
            }
            set {
                if ((object.ReferenceEquals(this.QuetionTextField, value) != true)) {
                    this.QuetionTextField = value;
                    this.RaisePropertyChanged("QuetionText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SideBarTitle {
            get {
                return this.SideBarTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.SideBarTitleField, value) != true)) {
                    this.SideBarTitleField = value;
                    this.RaisePropertyChanged("SideBarTitle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SavePOEResultRequest", Namespace="")]
    [System.SerializableAttribute()]
    public partial class SavePOEResultRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnswerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FeedbackIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FeedbackStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModuleNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Answer {
            get {
                return this.AnswerField;
            }
            set {
                if ((this.AnswerField.Equals(value) != true)) {
                    this.AnswerField = value;
                    this.RaisePropertyChanged("Answer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnswerType {
            get {
                return this.AnswerTypeField;
            }
            set {
                if ((this.AnswerTypeField.Equals(value) != true)) {
                    this.AnswerTypeField = value;
                    this.RaisePropertyChanged("AnswerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FeedbackId {
            get {
                return this.FeedbackIdField;
            }
            set {
                if ((this.FeedbackIdField.Equals(value) != true)) {
                    this.FeedbackIdField = value;
                    this.RaisePropertyChanged("FeedbackId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FeedbackStatus {
            get {
                return this.FeedbackStatusField;
            }
            set {
                if ((this.FeedbackStatusField.Equals(value) != true)) {
                    this.FeedbackStatusField = value;
                    this.RaisePropertyChanged("FeedbackStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModuleNumber {
            get {
                return this.ModuleNumberField;
            }
            set {
                if ((this.ModuleNumberField.Equals(value) != true)) {
                    this.ModuleNumberField = value;
                    this.RaisePropertyChanged("ModuleNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionId {
            get {
                return this.QuestionIdField;
            }
            set {
                if ((this.QuestionIdField.Equals(value) != true)) {
                    this.QuestionIdField = value;
                    this.RaisePropertyChanged("QuestionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewFeedbackRequest", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Request")]
    [System.SerializableAttribute()]
    public partial class NewFeedbackRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FeedbackForField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FeedbackRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FeedbackTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsGiveRequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] MembersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PoeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FeedbackFor {
            get {
                return this.FeedbackForField;
            }
            set {
                if ((this.FeedbackForField.Equals(value) != true)) {
                    this.FeedbackForField = value;
                    this.RaisePropertyChanged("FeedbackFor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FeedbackRole {
            get {
                return this.FeedbackRoleField;
            }
            set {
                if ((this.FeedbackRoleField.Equals(value) != true)) {
                    this.FeedbackRoleField = value;
                    this.RaisePropertyChanged("FeedbackRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FeedbackType {
            get {
                return this.FeedbackTypeField;
            }
            set {
                if ((this.FeedbackTypeField.Equals(value) != true)) {
                    this.FeedbackTypeField = value;
                    this.RaisePropertyChanged("FeedbackType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGiveRequest {
            get {
                return this.IsGiveRequestField;
            }
            set {
                if ((this.IsGiveRequestField.Equals(value) != true)) {
                    this.IsGiveRequestField = value;
                    this.RaisePropertyChanged("IsGiveRequest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] Members {
            get {
                return this.MembersField;
            }
            set {
                if ((object.ReferenceEquals(this.MembersField, value) != true)) {
                    this.MembersField = value;
                    this.RaisePropertyChanged("Members");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PoeId {
            get {
                return this.PoeIdField;
            }
            set {
                if ((this.PoeIdField.Equals(value) != true)) {
                    this.PoeIdField = value;
                    this.RaisePropertyChanged("PoeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreatedFeedback", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Response")]
    [System.SerializableAttribute()]
    public partial class CreatedFeedback : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FeedBackIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserMappingIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FeedBackId {
            get {
                return this.FeedBackIdField;
            }
            set {
                if ((this.FeedBackIdField.Equals(value) != true)) {
                    this.FeedBackIdField = value;
                    this.RaisePropertyChanged("FeedBackId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserMappingId {
            get {
                return this.UserMappingIdField;
            }
            set {
                if ((this.UserMappingIdField.Equals(value) != true)) {
                    this.UserMappingIdField = value;
                    this.RaisePropertyChanged("UserMappingId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FeedbackService.Feedback")]
    public interface Feedback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Feedback/GetFeedbackGivenCount", ReplyAction="http://tempuri.org/Feedback/GetFeedbackGivenCountResponse")]
        int GetFeedbackGivenCount(int userId, int poeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Feedback/GetFeedbackReceivedCount", ReplyAction="http://tempuri.org/Feedback/GetFeedbackReceivedCountResponse")]
        int GetFeedbackReceivedCount(int userId, int poeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Feedback/GetPOEIntro", ReplyAction="http://tempuri.org/Feedback/GetPOEIntroResponse")]
        string GetPOEIntro(int poeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Feedback/GetModuleIntro", ReplyAction="http://tempuri.org/Feedback/GetModuleIntroResponse")]
        string GetModuleIntro(int poeid, int moduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Feedback/GetPOEKeyAction", ReplyAction="http://tempuri.org/Feedback/GetPOEKeyActionResponse")]
        string GetPOEKeyAction(int poeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Feedback/GetModuleKeyAction", ReplyAction="http://tempuri.org/Feedback/GetModuleKeyActionResponse")]
        string GetModuleKeyAction(int poeid, int moduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Feedback/GetPracticeArea", ReplyAction="http://tempuri.org/Feedback/GetPracticeAreaResponse")]
        bExcellent.mvc.FeedbackService.Module[] GetPracticeArea(int poeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Feedback/GetQuestions", ReplyAction="http://tempuri.org/Feedback/GetQuestionsResponse")]
        bExcellent.mvc.FeedbackService.Question[] GetQuestions(int moduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Feedback/SavePOEResult", ReplyAction="http://tempuri.org/Feedback/SavePOEResultResponse")]
        bool SavePOEResult(bExcellent.mvc.FeedbackService.SavePOEResultRequest[] request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Feedback/CreateFeedback", ReplyAction="http://tempuri.org/Feedback/CreateFeedbackResponse")]
        bExcellent.mvc.FeedbackService.CreatedFeedback[] CreateFeedback(bExcellent.mvc.FeedbackService.NewFeedbackRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface FeedbackChannel : bExcellent.mvc.FeedbackService.Feedback, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FeedbackClient : System.ServiceModel.ClientBase<bExcellent.mvc.FeedbackService.Feedback>, bExcellent.mvc.FeedbackService.Feedback {
        
        public FeedbackClient() {
        }
        
        public FeedbackClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FeedbackClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FeedbackClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FeedbackClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GetFeedbackGivenCount(int userId, int poeId) {
            return base.Channel.GetFeedbackGivenCount(userId, poeId);
        }
        
        public int GetFeedbackReceivedCount(int userId, int poeId) {
            return base.Channel.GetFeedbackReceivedCount(userId, poeId);
        }
        
        public string GetPOEIntro(int poeid) {
            return base.Channel.GetPOEIntro(poeid);
        }
        
        public string GetModuleIntro(int poeid, int moduleId) {
            return base.Channel.GetModuleIntro(poeid, moduleId);
        }
        
        public string GetPOEKeyAction(int poeid) {
            return base.Channel.GetPOEKeyAction(poeid);
        }
        
        public string GetModuleKeyAction(int poeid, int moduleId) {
            return base.Channel.GetModuleKeyAction(poeid, moduleId);
        }
        
        public bExcellent.mvc.FeedbackService.Module[] GetPracticeArea(int poeid) {
            return base.Channel.GetPracticeArea(poeid);
        }
        
        public bExcellent.mvc.FeedbackService.Question[] GetQuestions(int moduleId) {
            return base.Channel.GetQuestions(moduleId);
        }
        
        public bool SavePOEResult(bExcellent.mvc.FeedbackService.SavePOEResultRequest[] request) {
            return base.Channel.SavePOEResult(request);
        }
        
        public bExcellent.mvc.FeedbackService.CreatedFeedback[] CreateFeedback(bExcellent.mvc.FeedbackService.NewFeedbackRequest request) {
            return base.Channel.CreateFeedback(request);
        }
    }
}
