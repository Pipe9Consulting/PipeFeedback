//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SendYammerMessages.CommonService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MinimizedPOE", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Domain")]
    [System.SerializableAttribute()]
    public partial class MinimizedPOE : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NoOfModuleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POEIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POENameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionPerModuleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RoleLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleTitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoOfModule {
            get {
                return this.NoOfModuleField;
            }
            set {
                if ((this.NoOfModuleField.Equals(value) != true)) {
                    this.NoOfModuleField = value;
                    this.RaisePropertyChanged("NoOfModule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POEId {
            get {
                return this.POEIdField;
            }
            set {
                if ((this.POEIdField.Equals(value) != true)) {
                    this.POEIdField = value;
                    this.RaisePropertyChanged("POEId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POEName {
            get {
                return this.POENameField;
            }
            set {
                if ((object.ReferenceEquals(this.POENameField, value) != true)) {
                    this.POENameField = value;
                    this.RaisePropertyChanged("POEName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionPerModule {
            get {
                return this.QuestionPerModuleField;
            }
            set {
                if ((this.QuestionPerModuleField.Equals(value) != true)) {
                    this.QuestionPerModuleField = value;
                    this.RaisePropertyChanged("QuestionPerModule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RoleLevel {
            get {
                return this.RoleLevelField;
            }
            set {
                if ((this.RoleLevelField.Equals(value) != true)) {
                    this.RoleLevelField = value;
                    this.RaisePropertyChanged("RoleLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleTitle {
            get {
                return this.RoleTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleTitleField, value) != true)) {
                    this.RoleTitleField = value;
                    this.RaisePropertyChanged("RoleTitle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserPOEMapping", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Domain")]
    [System.SerializableAttribute()]
    public partial class UserPOEMapping : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AreaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChildMappingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.Designation DesignationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.Feedback FeedbackDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NooffbsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.POE POEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POEIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentMappingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PeerChildMappingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PeerParentMappingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PoeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SecondaryUserPOEMappingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscribtionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float UserAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserPOEMappingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WcsiScoreDiffField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AreaId {
            get {
                return this.AreaIdField;
            }
            set {
                if ((this.AreaIdField.Equals(value) != true)) {
                    this.AreaIdField = value;
                    this.RaisePropertyChanged("AreaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChildMappingId {
            get {
                return this.ChildMappingIdField;
            }
            set {
                if ((this.ChildMappingIdField.Equals(value) != true)) {
                    this.ChildMappingIdField = value;
                    this.RaisePropertyChanged("ChildMappingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.Designation Designation {
            get {
                return this.DesignationField;
            }
            set {
                if ((object.ReferenceEquals(this.DesignationField, value) != true)) {
                    this.DesignationField = value;
                    this.RaisePropertyChanged("Designation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.Feedback FeedbackDetails {
            get {
                return this.FeedbackDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.FeedbackDetailsField, value) != true)) {
                    this.FeedbackDetailsField = value;
                    this.RaisePropertyChanged("FeedbackDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobTitle {
            get {
                return this.JobTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.JobTitleField, value) != true)) {
                    this.JobTitleField = value;
                    this.RaisePropertyChanged("JobTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Nooffbs {
            get {
                return this.NooffbsField;
            }
            set {
                if ((this.NooffbsField.Equals(value) != true)) {
                    this.NooffbsField = value;
                    this.RaisePropertyChanged("Nooffbs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.POE POE {
            get {
                return this.POEField;
            }
            set {
                if ((object.ReferenceEquals(this.POEField, value) != true)) {
                    this.POEField = value;
                    this.RaisePropertyChanged("POE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POEId {
            get {
                return this.POEIdField;
            }
            set {
                if ((this.POEIdField.Equals(value) != true)) {
                    this.POEIdField = value;
                    this.RaisePropertyChanged("POEId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentMappingId {
            get {
                return this.ParentMappingIdField;
            }
            set {
                if ((this.ParentMappingIdField.Equals(value) != true)) {
                    this.ParentMappingIdField = value;
                    this.RaisePropertyChanged("ParentMappingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PeerChildMappingId {
            get {
                return this.PeerChildMappingIdField;
            }
            set {
                if ((this.PeerChildMappingIdField.Equals(value) != true)) {
                    this.PeerChildMappingIdField = value;
                    this.RaisePropertyChanged("PeerChildMappingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PeerParentMappingId {
            get {
                return this.PeerParentMappingIdField;
            }
            set {
                if ((this.PeerParentMappingIdField.Equals(value) != true)) {
                    this.PeerParentMappingIdField = value;
                    this.RaisePropertyChanged("PeerParentMappingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float PoeAmount {
            get {
                return this.PoeAmountField;
            }
            set {
                if ((this.PoeAmountField.Equals(value) != true)) {
                    this.PoeAmountField = value;
                    this.RaisePropertyChanged("PoeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegionId {
            get {
                return this.RegionIdField;
            }
            set {
                if ((this.RegionIdField.Equals(value) != true)) {
                    this.RegionIdField = value;
                    this.RaisePropertyChanged("RegionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Role {
            get {
                return this.RoleField;
            }
            set {
                if ((this.RoleField.Equals(value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SecondaryUserPOEMappingId {
            get {
                return this.SecondaryUserPOEMappingIdField;
            }
            set {
                if ((this.SecondaryUserPOEMappingIdField.Equals(value) != true)) {
                    this.SecondaryUserPOEMappingIdField = value;
                    this.RaisePropertyChanged("SecondaryUserPOEMappingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscribtionDate {
            get {
                return this.SubscribtionDateField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscribtionDateField, value) != true)) {
                    this.SubscribtionDateField = value;
                    this.RaisePropertyChanged("SubscribtionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float UserAmount {
            get {
                return this.UserAmountField;
            }
            set {
                if ((this.UserAmountField.Equals(value) != true)) {
                    this.UserAmountField = value;
                    this.RaisePropertyChanged("UserAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserPOEMappingId {
            get {
                return this.UserPOEMappingIdField;
            }
            set {
                if ((this.UserPOEMappingIdField.Equals(value) != true)) {
                    this.UserPOEMappingIdField = value;
                    this.RaisePropertyChanged("UserPOEMappingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WcsiScoreDiff {
            get {
                return this.WcsiScoreDiffField;
            }
            set {
                if ((this.WcsiScoreDiffField.Equals(value) != true)) {
                    this.WcsiScoreDiffField = value;
                    this.RaisePropertyChanged("WcsiScoreDiff");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Designation", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Domain")]
    [System.SerializableAttribute()]
    public partial class Designation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DesignationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DesignationId {
            get {
                return this.DesignationIdField;
            }
            set {
                if ((this.DesignationIdField.Equals(value) != true)) {
                    this.DesignationIdField = value;
                    this.RaisePropertyChanged("DesignationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Feedback", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Domain")]
    [System.SerializableAttribute()]
    public partial class Feedback : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnDtmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FeedbackIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.FeedbackStatus FeedbackStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.FeedbackType FeedbackTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.UserPOEMapping RequestedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequestedByIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.UserPOEMapping RequestedForField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequestedForIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.UserPOEMapping RequestedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequestedFromIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdatedOnDtmField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOnDtm {
            get {
                return this.CreatedOnDtmField;
            }
            set {
                if ((this.CreatedOnDtmField.Equals(value) != true)) {
                    this.CreatedOnDtmField = value;
                    this.RaisePropertyChanged("CreatedOnDtm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FeedbackId {
            get {
                return this.FeedbackIdField;
            }
            set {
                if ((this.FeedbackIdField.Equals(value) != true)) {
                    this.FeedbackIdField = value;
                    this.RaisePropertyChanged("FeedbackId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.FeedbackStatus FeedbackStatus {
            get {
                return this.FeedbackStatusField;
            }
            set {
                if ((this.FeedbackStatusField.Equals(value) != true)) {
                    this.FeedbackStatusField = value;
                    this.RaisePropertyChanged("FeedbackStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.FeedbackType FeedbackType {
            get {
                return this.FeedbackTypeField;
            }
            set {
                if ((this.FeedbackTypeField.Equals(value) != true)) {
                    this.FeedbackTypeField = value;
                    this.RaisePropertyChanged("FeedbackType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.UserPOEMapping RequestedBy {
            get {
                return this.RequestedByField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestedByField, value) != true)) {
                    this.RequestedByField = value;
                    this.RaisePropertyChanged("RequestedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequestedById {
            get {
                return this.RequestedByIdField;
            }
            set {
                if ((this.RequestedByIdField.Equals(value) != true)) {
                    this.RequestedByIdField = value;
                    this.RaisePropertyChanged("RequestedById");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.UserPOEMapping RequestedFor {
            get {
                return this.RequestedForField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestedForField, value) != true)) {
                    this.RequestedForField = value;
                    this.RaisePropertyChanged("RequestedFor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequestedForId {
            get {
                return this.RequestedForIdField;
            }
            set {
                if ((this.RequestedForIdField.Equals(value) != true)) {
                    this.RequestedForIdField = value;
                    this.RaisePropertyChanged("RequestedForId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.UserPOEMapping RequestedFrom {
            get {
                return this.RequestedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestedFromField, value) != true)) {
                    this.RequestedFromField = value;
                    this.RaisePropertyChanged("RequestedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequestedFromId {
            get {
                return this.RequestedFromIdField;
            }
            set {
                if ((this.RequestedFromIdField.Equals(value) != true)) {
                    this.RequestedFromIdField = value;
                    this.RaisePropertyChanged("RequestedFromId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedOn {
            get {
                return this.UpdatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedOnField, value) != true)) {
                    this.UpdatedOnField = value;
                    this.RaisePropertyChanged("UpdatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdatedOnDtm {
            get {
                return this.UpdatedOnDtmField;
            }
            set {
                if ((this.UpdatedOnDtmField.Equals(value) != true)) {
                    this.UpdatedOnDtmField = value;
                    this.RaisePropertyChanged("UpdatedOnDtm");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POE", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Domain")]
    [System.SerializableAttribute()]
    public partial class POE : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntroContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.Module[] ModulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POEIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PoeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PoeFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscribedPoeDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntroContent {
            get {
                return this.IntroContentField;
            }
            set {
                if ((object.ReferenceEquals(this.IntroContentField, value) != true)) {
                    this.IntroContentField = value;
                    this.RaisePropertyChanged("IntroContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.Module[] Modules {
            get {
                return this.ModulesField;
            }
            set {
                if ((object.ReferenceEquals(this.ModulesField, value) != true)) {
                    this.ModulesField = value;
                    this.RaisePropertyChanged("Modules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POEId {
            get {
                return this.POEIdField;
            }
            set {
                if ((this.POEIdField.Equals(value) != true)) {
                    this.POEIdField = value;
                    this.RaisePropertyChanged("POEId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float PoeAmount {
            get {
                return this.PoeAmountField;
            }
            set {
                if ((this.PoeAmountField.Equals(value) != true)) {
                    this.PoeAmountField = value;
                    this.RaisePropertyChanged("PoeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PoeFlag {
            get {
                return this.PoeFlagField;
            }
            set {
                if ((this.PoeFlagField.Equals(value) != true)) {
                    this.PoeFlagField = value;
                    this.RaisePropertyChanged("PoeFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscribedPoeDate {
            get {
                return this.SubscribedPoeDateField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscribedPoeDateField, value) != true)) {
                    this.SubscribedPoeDateField = value;
                    this.RaisePropertyChanged("SubscribedPoeDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.Zone AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanySizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.Country CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DesignationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsAgreedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StratPageModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SubscriptionidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string YammerTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.Zone Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanySize {
            get {
                return this.CompanySizeField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanySizeField, value) != true)) {
                    this.CompanySizeField = value;
                    this.RaisePropertyChanged("CompanySize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.Country Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DesignationId {
            get {
                return this.DesignationIdField;
            }
            set {
                if ((this.DesignationIdField.Equals(value) != true)) {
                    this.DesignationIdField = value;
                    this.RaisePropertyChanged("DesignationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsAgreed {
            get {
                return this.IsAgreedField;
            }
            set {
                if ((this.IsAgreedField.Equals(value) != true)) {
                    this.IsAgreedField = value;
                    this.RaisePropertyChanged("IsAgreed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobTitle {
            get {
                return this.JobTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.JobTitleField, value) != true)) {
                    this.JobTitleField = value;
                    this.RaisePropertyChanged("JobTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastLogin {
            get {
                return this.LastLoginField;
            }
            set {
                if ((this.LastLoginField.Equals(value) != true)) {
                    this.LastLoginField = value;
                    this.RaisePropertyChanged("LastLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Photo {
            get {
                return this.PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoField, value) != true)) {
                    this.PhotoField = value;
                    this.RaisePropertyChanged("Photo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StratPageMode {
            get {
                return this.StratPageModeField;
            }
            set {
                if ((this.StratPageModeField.Equals(value) != true)) {
                    this.StratPageModeField = value;
                    this.RaisePropertyChanged("StratPageMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Subscriptionid {
            get {
                return this.SubscriptionidField;
            }
            set {
                if ((this.SubscriptionidField.Equals(value) != true)) {
                    this.SubscriptionidField = value;
                    this.RaisePropertyChanged("Subscriptionid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string YammerToken {
            get {
                return this.YammerTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.YammerTokenField, value) != true)) {
                    this.YammerTokenField = value;
                    this.RaisePropertyChanged("YammerToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FeedbackStatus", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Enumeration")]
    public enum FeedbackStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotStarted = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InProgress = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Complete = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FeedbackType", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Enumeration")]
    public enum FeedbackType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Self = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manager = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Module", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Domain")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SendYammerMessages.CommonService.ModulesGoal))]
    public partial class Module : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyAction1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyAction2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyAction3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyAction4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyAction5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KeyActionSlideCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModuleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleIntroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleIntro1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleIntro2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleIntro3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleIntro4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleIntro5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModuleIntroSlideCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModuleOrderNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POEIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.Question[] QuestionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IndexType {
            get {
                return this.IndexTypeField;
            }
            set {
                if ((this.IndexTypeField.Equals(value) != true)) {
                    this.IndexTypeField = value;
                    this.RaisePropertyChanged("IndexType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyAction {
            get {
                return this.KeyActionField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyActionField, value) != true)) {
                    this.KeyActionField = value;
                    this.RaisePropertyChanged("KeyAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyAction1 {
            get {
                return this.KeyAction1Field;
            }
            set {
                if ((object.ReferenceEquals(this.KeyAction1Field, value) != true)) {
                    this.KeyAction1Field = value;
                    this.RaisePropertyChanged("KeyAction1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyAction2 {
            get {
                return this.KeyAction2Field;
            }
            set {
                if ((object.ReferenceEquals(this.KeyAction2Field, value) != true)) {
                    this.KeyAction2Field = value;
                    this.RaisePropertyChanged("KeyAction2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyAction3 {
            get {
                return this.KeyAction3Field;
            }
            set {
                if ((object.ReferenceEquals(this.KeyAction3Field, value) != true)) {
                    this.KeyAction3Field = value;
                    this.RaisePropertyChanged("KeyAction3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyAction4 {
            get {
                return this.KeyAction4Field;
            }
            set {
                if ((object.ReferenceEquals(this.KeyAction4Field, value) != true)) {
                    this.KeyAction4Field = value;
                    this.RaisePropertyChanged("KeyAction4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyAction5 {
            get {
                return this.KeyAction5Field;
            }
            set {
                if ((object.ReferenceEquals(this.KeyAction5Field, value) != true)) {
                    this.KeyAction5Field = value;
                    this.RaisePropertyChanged("KeyAction5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KeyActionSlideCount {
            get {
                return this.KeyActionSlideCountField;
            }
            set {
                if ((this.KeyActionSlideCountField.Equals(value) != true)) {
                    this.KeyActionSlideCountField = value;
                    this.RaisePropertyChanged("KeyActionSlideCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModuleId {
            get {
                return this.ModuleIdField;
            }
            set {
                if ((this.ModuleIdField.Equals(value) != true)) {
                    this.ModuleIdField = value;
                    this.RaisePropertyChanged("ModuleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleIntro {
            get {
                return this.ModuleIntroField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleIntroField, value) != true)) {
                    this.ModuleIntroField = value;
                    this.RaisePropertyChanged("ModuleIntro");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleIntro1 {
            get {
                return this.ModuleIntro1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleIntro1Field, value) != true)) {
                    this.ModuleIntro1Field = value;
                    this.RaisePropertyChanged("ModuleIntro1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleIntro2 {
            get {
                return this.ModuleIntro2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleIntro2Field, value) != true)) {
                    this.ModuleIntro2Field = value;
                    this.RaisePropertyChanged("ModuleIntro2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleIntro3 {
            get {
                return this.ModuleIntro3Field;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleIntro3Field, value) != true)) {
                    this.ModuleIntro3Field = value;
                    this.RaisePropertyChanged("ModuleIntro3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleIntro4 {
            get {
                return this.ModuleIntro4Field;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleIntro4Field, value) != true)) {
                    this.ModuleIntro4Field = value;
                    this.RaisePropertyChanged("ModuleIntro4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleIntro5 {
            get {
                return this.ModuleIntro5Field;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleIntro5Field, value) != true)) {
                    this.ModuleIntro5Field = value;
                    this.RaisePropertyChanged("ModuleIntro5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModuleIntroSlideCount {
            get {
                return this.ModuleIntroSlideCountField;
            }
            set {
                if ((this.ModuleIntroSlideCountField.Equals(value) != true)) {
                    this.ModuleIntroSlideCountField = value;
                    this.RaisePropertyChanged("ModuleIntroSlideCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleName {
            get {
                return this.ModuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleNameField, value) != true)) {
                    this.ModuleNameField = value;
                    this.RaisePropertyChanged("ModuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModuleOrderNumber {
            get {
                return this.ModuleOrderNumberField;
            }
            set {
                if ((this.ModuleOrderNumberField.Equals(value) != true)) {
                    this.ModuleOrderNumberField = value;
                    this.RaisePropertyChanged("ModuleOrderNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POEId {
            get {
                return this.POEIdField;
            }
            set {
                if ((this.POEIdField.Equals(value) != true)) {
                    this.POEIdField = value;
                    this.RaisePropertyChanged("POEId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.Question[] Questions {
            get {
                return this.QuestionsField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionsField, value) != true)) {
                    this.QuestionsField = value;
                    this.RaisePropertyChanged("Questions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModulesGoal", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Domain")]
    [System.SerializableAttribute()]
    public partial class ModulesGoal : SendYammerMessages.CommonService.Module {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.QuestionsGoal[] QuestionsGoalsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.QuestionsGoal[] QuestionsGoals {
            get {
                return this.QuestionsGoalsField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionsGoalsField, value) != true)) {
                    this.QuestionsGoalsField = value;
                    this.RaisePropertyChanged("QuestionsGoals");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Question", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Domain")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SendYammerMessages.CommonService.QuestionsGoal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SendYammerMessages.CommonService.SyncQuestionScore))]
    public partial class Question : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBarrierQuestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionOrderNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuetionTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortQuetionTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SideBarTitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Answer {
            get {
                return this.AnswerField;
            }
            set {
                if ((this.AnswerField.Equals(value) != true)) {
                    this.AnswerField = value;
                    this.RaisePropertyChanged("Answer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBarrierQuestion {
            get {
                return this.IsBarrierQuestionField;
            }
            set {
                if ((this.IsBarrierQuestionField.Equals(value) != true)) {
                    this.IsBarrierQuestionField = value;
                    this.RaisePropertyChanged("IsBarrierQuestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionId {
            get {
                return this.QuestionIdField;
            }
            set {
                if ((this.QuestionIdField.Equals(value) != true)) {
                    this.QuestionIdField = value;
                    this.RaisePropertyChanged("QuestionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionOrderNumber {
            get {
                return this.QuestionOrderNumberField;
            }
            set {
                if ((this.QuestionOrderNumberField.Equals(value) != true)) {
                    this.QuestionOrderNumberField = value;
                    this.RaisePropertyChanged("QuestionOrderNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuetionText {
            get {
                return this.QuetionTextField;
            }
            set {
                if ((object.ReferenceEquals(this.QuetionTextField, value) != true)) {
                    this.QuetionTextField = value;
                    this.RaisePropertyChanged("QuetionText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortQuetionText {
            get {
                return this.ShortQuetionTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortQuetionTextField, value) != true)) {
                    this.ShortQuetionTextField = value;
                    this.RaisePropertyChanged("ShortQuetionText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SideBarTitle {
            get {
                return this.SideBarTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.SideBarTitleField, value) != true)) {
                    this.SideBarTitleField = value;
                    this.RaisePropertyChanged("SideBarTitle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestionsGoal", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Domain")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SendYammerMessages.CommonService.SyncQuestionScore))]
    public partial class QuestionsGoal : SendYammerMessages.CommonService.Question {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GoalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GoalCompletedMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GoalExpiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GoalGapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GoalMonthDiffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime GoalSetedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GoalSetedOnStrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectedGoalValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Goal {
            get {
                return this.GoalField;
            }
            set {
                if ((this.GoalField.Equals(value) != true)) {
                    this.GoalField = value;
                    this.RaisePropertyChanged("Goal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GoalCompletedMonth {
            get {
                return this.GoalCompletedMonthField;
            }
            set {
                if ((this.GoalCompletedMonthField.Equals(value) != true)) {
                    this.GoalCompletedMonthField = value;
                    this.RaisePropertyChanged("GoalCompletedMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GoalExpired {
            get {
                return this.GoalExpiredField;
            }
            set {
                if ((this.GoalExpiredField.Equals(value) != true)) {
                    this.GoalExpiredField = value;
                    this.RaisePropertyChanged("GoalExpired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GoalGap {
            get {
                return this.GoalGapField;
            }
            set {
                if ((this.GoalGapField.Equals(value) != true)) {
                    this.GoalGapField = value;
                    this.RaisePropertyChanged("GoalGap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GoalMonthDiff {
            get {
                return this.GoalMonthDiffField;
            }
            set {
                if ((this.GoalMonthDiffField.Equals(value) != true)) {
                    this.GoalMonthDiffField = value;
                    this.RaisePropertyChanged("GoalMonthDiff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime GoalSetedOn {
            get {
                return this.GoalSetedOnField;
            }
            set {
                if ((this.GoalSetedOnField.Equals(value) != true)) {
                    this.GoalSetedOnField = value;
                    this.RaisePropertyChanged("GoalSetedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GoalSetedOnStr {
            get {
                return this.GoalSetedOnStrField;
            }
            set {
                if ((object.ReferenceEquals(this.GoalSetedOnStrField, value) != true)) {
                    this.GoalSetedOnStrField = value;
                    this.RaisePropertyChanged("GoalSetedOnStr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectedGoalValue {
            get {
                return this.SelectedGoalValueField;
            }
            set {
                if ((this.SelectedGoalValueField.Equals(value) != true)) {
                    this.SelectedGoalValueField = value;
                    this.RaisePropertyChanged("SelectedGoalValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SyncQuestionScore", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Response")]
    [System.SerializableAttribute()]
    public partial class SyncQuestionScore : SendYammerMessages.CommonService.QuestionsGoal {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSharedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ScorePercentageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsShared {
            get {
                return this.IsSharedField;
            }
            set {
                if ((this.IsSharedField.Equals(value) != true)) {
                    this.IsSharedField = value;
                    this.RaisePropertyChanged("IsShared");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ScorePercentage {
            get {
                return this.ScorePercentageField;
            }
            set {
                if ((this.ScorePercentageField.Equals(value) != true)) {
                    this.ScorePercentageField = value;
                    this.RaisePropertyChanged("ScorePercentage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Zone", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Domain")]
    [System.SerializableAttribute()]
    public partial class Zone : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((this.CountryIdField.Equals(value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Country", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Domain")]
    [System.SerializableAttribute()]
    public partial class Country : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Accounts", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Domain")]
    [System.SerializableAttribute()]
    public partial class Accounts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DesignationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DesignationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PlanIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PoeCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.POE[] PoesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscribedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscribedUserDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrialDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> UserCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UseridField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DesignationId {
            get {
                return this.DesignationIdField;
            }
            set {
                if ((this.DesignationIdField.Equals(value) != true)) {
                    this.DesignationIdField = value;
                    this.RaisePropertyChanged("DesignationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DesignationName {
            get {
                return this.DesignationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DesignationNameField, value) != true)) {
                    this.DesignationNameField = value;
                    this.RaisePropertyChanged("DesignationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailId {
            get {
                return this.EmailIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailIdField, value) != true)) {
                    this.EmailIdField = value;
                    this.RaisePropertyChanged("EmailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Photo {
            get {
                return this.PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoField, value) != true)) {
                    this.PhotoField = value;
                    this.RaisePropertyChanged("Photo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PlanId {
            get {
                return this.PlanIdField;
            }
            set {
                if ((this.PlanIdField.Equals(value) != true)) {
                    this.PlanIdField = value;
                    this.RaisePropertyChanged("PlanId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PoeCost {
            get {
                return this.PoeCostField;
            }
            set {
                if ((this.PoeCostField.Equals(value) != true)) {
                    this.PoeCostField = value;
                    this.RaisePropertyChanged("PoeCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.POE[] Poes {
            get {
                return this.PoesField;
            }
            set {
                if ((object.ReferenceEquals(this.PoesField, value) != true)) {
                    this.PoesField = value;
                    this.RaisePropertyChanged("Poes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscribedDate {
            get {
                return this.SubscribedDateField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscribedDateField, value) != true)) {
                    this.SubscribedDateField = value;
                    this.RaisePropertyChanged("SubscribedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscribedUserDate {
            get {
                return this.SubscribedUserDateField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscribedUserDateField, value) != true)) {
                    this.SubscribedUserDateField = value;
                    this.RaisePropertyChanged("SubscribedUserDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrialDate {
            get {
                return this.TrialDateField;
            }
            set {
                if ((object.ReferenceEquals(this.TrialDateField, value) != true)) {
                    this.TrialDateField = value;
                    this.RaisePropertyChanged("TrialDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> UserCost {
            get {
                return this.UserCostField;
            }
            set {
                if ((this.UserCostField.Equals(value) != true)) {
                    this.UserCostField = value;
                    this.RaisePropertyChanged("UserCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Userid {
            get {
                return this.UseridField;
            }
            set {
                if ((this.UseridField.Equals(value) != true)) {
                    this.UseridField = value;
                    this.RaisePropertyChanged("Userid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PoeModules", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Domain")]
    [System.SerializableAttribute()]
    public partial class PoeModules : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.PoeModuleValues[] ModulesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.PoeModuleValues[] Modules {
            get {
                return this.ModulesField;
            }
            set {
                if ((object.ReferenceEquals(this.ModulesField, value) != true)) {
                    this.ModulesField = value;
                    this.RaisePropertyChanged("Modules");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PoeModuleValues", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Domain")]
    [System.SerializableAttribute()]
    public partial class PoeModuleValues : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ModuleAverageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModuleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModulenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.WeightageValue WeightageScoresField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ModuleAverage {
            get {
                return this.ModuleAverageField;
            }
            set {
                if ((this.ModuleAverageField.Equals(value) != true)) {
                    this.ModuleAverageField = value;
                    this.RaisePropertyChanged("ModuleAverage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModuleId {
            get {
                return this.ModuleIdField;
            }
            set {
                if ((this.ModuleIdField.Equals(value) != true)) {
                    this.ModuleIdField = value;
                    this.RaisePropertyChanged("ModuleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modulename {
            get {
                return this.ModulenameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModulenameField, value) != true)) {
                    this.ModulenameField = value;
                    this.RaisePropertyChanged("Modulename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PoeName {
            get {
                return this.PoeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PoeNameField, value) != true)) {
                    this.PoeNameField = value;
                    this.RaisePropertyChanged("PoeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.WeightageValue WeightageScores {
            get {
                return this.WeightageScoresField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightageScoresField, value) != true)) {
                    this.WeightageScoresField = value;
                    this.RaisePropertyChanged("WeightageScores");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WeightageValue", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Domain")]
    [System.SerializableAttribute()]
    public partial class WeightageValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AlwaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FrequentlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InconsistenlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RarelyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Always {
            get {
                return this.AlwaysField;
            }
            set {
                if ((this.AlwaysField.Equals(value) != true)) {
                    this.AlwaysField = value;
                    this.RaisePropertyChanged("Always");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Frequently {
            get {
                return this.FrequentlyField;
            }
            set {
                if ((this.FrequentlyField.Equals(value) != true)) {
                    this.FrequentlyField = value;
                    this.RaisePropertyChanged("Frequently");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Inconsistenly {
            get {
                return this.InconsistenlyField;
            }
            set {
                if ((this.InconsistenlyField.Equals(value) != true)) {
                    this.InconsistenlyField = value;
                    this.RaisePropertyChanged("Inconsistenly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Rarely {
            get {
                return this.RarelyField;
            }
            set {
                if ((this.RarelyField.Equals(value) != true)) {
                    this.RarelyField = value;
                    this.RaisePropertyChanged("Rarely");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Network", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Domain")]
    [System.SerializableAttribute()]
    public partial class Network : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NetworkNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubscriptionidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailId {
            get {
                return this.EmailIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailIdField, value) != true)) {
                    this.EmailIdField = value;
                    this.RaisePropertyChanged("EmailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NetworkName {
            get {
                return this.NetworkNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NetworkNameField, value) != true)) {
                    this.NetworkNameField = value;
                    this.RaisePropertyChanged("NetworkName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Plan {
            get {
                return this.PlanField;
            }
            set {
                if ((this.PlanField.Equals(value) != true)) {
                    this.PlanField = value;
                    this.RaisePropertyChanged("Plan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Subscriptionid {
            get {
                return this.SubscriptionidField;
            }
            set {
                if ((this.SubscriptionidField.Equals(value) != true)) {
                    this.SubscriptionidField = value;
                    this.RaisePropertyChanged("Subscriptionid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="V3_GetMyActivitiesResult", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.DataAccess")]
    [System.SerializableAttribute()]
    public partial class V3_GetMyActivitiesResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SubIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string batchIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Activity {
            get {
                return this.ActivityField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityField, value) != true)) {
                    this.ActivityField = value;
                    this.RaisePropertyChanged("Activity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailID {
            get {
                return this.EmailIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailIDField, value) != true)) {
                    this.EmailIDField = value;
                    this.RaisePropertyChanged("EmailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string From {
            get {
                return this.FromField;
            }
            set {
                if ((object.ReferenceEquals(this.FromField, value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SubID {
            get {
                return this.SubIDField;
            }
            set {
                if ((this.SubIDField.Equals(value) != true)) {
                    this.SubIDField = value;
                    this.RaisePropertyChanged("SubID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string batchId {
            get {
                return this.batchIdField;
            }
            set {
                if ((object.ReferenceEquals(this.batchIdField, value) != true)) {
                    this.batchIdField = value;
                    this.RaisePropertyChanged("batchId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="V3_GetUserListByBatchIdResult", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.DataAccess")]
    [System.SerializableAttribute()]
    public partial class V3_GetUserListByBatchIdResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailID {
            get {
                return this.EmailIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailIDField, value) != true)) {
                    this.EmailIDField = value;
                    this.RaisePropertyChanged("EmailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string For {
            get {
                return this.ForField;
            }
            set {
                if ((object.ReferenceEquals(this.ForField, value) != true)) {
                    this.ForField = value;
                    this.RaisePropertyChanged("For");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Standing", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Response")]
    [System.SerializableAttribute()]
    public partial class Standing : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.StandingScore NextinLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.StandingScore PreviousField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.StandingScore RestofCommunityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.StandingScore TopPerformerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.StandingScore YouField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.StandingScore NextinLine {
            get {
                return this.NextinLineField;
            }
            set {
                if ((object.ReferenceEquals(this.NextinLineField, value) != true)) {
                    this.NextinLineField = value;
                    this.RaisePropertyChanged("NextinLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.StandingScore Previous {
            get {
                return this.PreviousField;
            }
            set {
                if ((object.ReferenceEquals(this.PreviousField, value) != true)) {
                    this.PreviousField = value;
                    this.RaisePropertyChanged("Previous");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.StandingScore RestofCommunity {
            get {
                return this.RestofCommunityField;
            }
            set {
                if ((object.ReferenceEquals(this.RestofCommunityField, value) != true)) {
                    this.RestofCommunityField = value;
                    this.RaisePropertyChanged("RestofCommunity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.StandingScore TopPerformer {
            get {
                return this.TopPerformerField;
            }
            set {
                if ((object.ReferenceEquals(this.TopPerformerField, value) != true)) {
                    this.TopPerformerField = value;
                    this.RaisePropertyChanged("TopPerformer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.StandingScore You {
            get {
                return this.YouField;
            }
            set {
                if ((object.ReferenceEquals(this.YouField, value) != true)) {
                    this.YouField = value;
                    this.RaisePropertyChanged("You");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StandingScore", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Response")]
    [System.SerializableAttribute()]
    public partial class StandingScore : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChidIndex1NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChidIndex2NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Childindex1ScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Childindex2ScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FeedbackidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.ModuleScore[] ModuleScoresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PoeidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WcsiScoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChidIndex1Name {
            get {
                return this.ChidIndex1NameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChidIndex1NameField, value) != true)) {
                    this.ChidIndex1NameField = value;
                    this.RaisePropertyChanged("ChidIndex1Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChidIndex2Name {
            get {
                return this.ChidIndex2NameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChidIndex2NameField, value) != true)) {
                    this.ChidIndex2NameField = value;
                    this.RaisePropertyChanged("ChidIndex2Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Childindex1Score {
            get {
                return this.Childindex1ScoreField;
            }
            set {
                if ((this.Childindex1ScoreField.Equals(value) != true)) {
                    this.Childindex1ScoreField = value;
                    this.RaisePropertyChanged("Childindex1Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Childindex2Score {
            get {
                return this.Childindex2ScoreField;
            }
            set {
                if ((this.Childindex2ScoreField.Equals(value) != true)) {
                    this.Childindex2ScoreField = value;
                    this.RaisePropertyChanged("Childindex2Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Feedbackid {
            get {
                return this.FeedbackidField;
            }
            set {
                if ((this.FeedbackidField.Equals(value) != true)) {
                    this.FeedbackidField = value;
                    this.RaisePropertyChanged("Feedbackid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.ModuleScore[] ModuleScores {
            get {
                return this.ModuleScoresField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleScoresField, value) != true)) {
                    this.ModuleScoresField = value;
                    this.RaisePropertyChanged("ModuleScores");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PoeName {
            get {
                return this.PoeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PoeNameField, value) != true)) {
                    this.PoeNameField = value;
                    this.RaisePropertyChanged("PoeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Poeid {
            get {
                return this.PoeidField;
            }
            set {
                if ((this.PoeidField.Equals(value) != true)) {
                    this.PoeidField = value;
                    this.RaisePropertyChanged("Poeid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WcsiScore {
            get {
                return this.WcsiScoreField;
            }
            set {
                if ((this.WcsiScoreField.Equals(value) != true)) {
                    this.WcsiScoreField = value;
                    this.RaisePropertyChanged("WcsiScore");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModuleScore", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Response")]
    [System.SerializableAttribute()]
    public partial class ModuleScore : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ModuleScoreAvgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ModuleScorePercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModuleidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> ModulescoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.QuestionScore[] QuestionScoresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float TotalModuleScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> WeightageScoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleName {
            get {
                return this.ModuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleNameField, value) != true)) {
                    this.ModuleNameField = value;
                    this.RaisePropertyChanged("ModuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ModuleScoreAvg {
            get {
                return this.ModuleScoreAvgField;
            }
            set {
                if ((this.ModuleScoreAvgField.Equals(value) != true)) {
                    this.ModuleScoreAvgField = value;
                    this.RaisePropertyChanged("ModuleScoreAvg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ModuleScorePercentage {
            get {
                return this.ModuleScorePercentageField;
            }
            set {
                if ((this.ModuleScorePercentageField.Equals(value) != true)) {
                    this.ModuleScorePercentageField = value;
                    this.RaisePropertyChanged("ModuleScorePercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Moduleid {
            get {
                return this.ModuleidField;
            }
            set {
                if ((this.ModuleidField.Equals(value) != true)) {
                    this.ModuleidField = value;
                    this.RaisePropertyChanged("Moduleid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Modulescore {
            get {
                return this.ModulescoreField;
            }
            set {
                if ((this.ModulescoreField.Equals(value) != true)) {
                    this.ModulescoreField = value;
                    this.RaisePropertyChanged("Modulescore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.QuestionScore[] QuestionScores {
            get {
                return this.QuestionScoresField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionScoresField, value) != true)) {
                    this.QuestionScoresField = value;
                    this.RaisePropertyChanged("QuestionScores");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float TotalModuleScore {
            get {
                return this.TotalModuleScoreField;
            }
            set {
                if ((this.TotalModuleScoreField.Equals(value) != true)) {
                    this.TotalModuleScoreField = value;
                    this.RaisePropertyChanged("TotalModuleScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> WeightageScore {
            get {
                return this.WeightageScoreField;
            }
            set {
                if ((this.WeightageScoreField.Equals(value) != true)) {
                    this.WeightageScoreField = value;
                    this.RaisePropertyChanged("WeightageScore");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestionScore", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Response")]
    [System.SerializableAttribute()]
    public partial class QuestionScore : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuestionTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ScorePercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortQuetionTextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuestionText {
            get {
                return this.QuestionTextField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionTextField, value) != true)) {
                    this.QuestionTextField = value;
                    this.RaisePropertyChanged("QuestionText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Questionid {
            get {
                return this.QuestionidField;
            }
            set {
                if ((this.QuestionidField.Equals(value) != true)) {
                    this.QuestionidField = value;
                    this.RaisePropertyChanged("Questionid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ScorePercentage {
            get {
                return this.ScorePercentageField;
            }
            set {
                if ((this.ScorePercentageField.Equals(value) != true)) {
                    this.ScorePercentageField = value;
                    this.RaisePropertyChanged("ScorePercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortQuetionText {
            get {
                return this.ShortQuetionTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortQuetionTextField, value) != true)) {
                    this.ShortQuetionTextField = value;
                    this.RaisePropertyChanged("ShortQuetionText");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRole", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Domain")]
    [System.SerializableAttribute()]
    public partial class UserRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleTextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleText {
            get {
                return this.RoleTextField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleTextField, value) != true)) {
                    this.RoleTextField = value;
                    this.RaisePropertyChanged("RoleText");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GoalShare", Namespace="")]
    [System.SerializableAttribute()]
    public partial class GoalShare : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PoeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectedValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SharedWithIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PoeId {
            get {
                return this.PoeIdField;
            }
            set {
                if ((this.PoeIdField.Equals(value) != true)) {
                    this.PoeIdField = value;
                    this.RaisePropertyChanged("PoeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionId {
            get {
                return this.QuestionIdField;
            }
            set {
                if ((this.QuestionIdField.Equals(value) != true)) {
                    this.QuestionIdField = value;
                    this.RaisePropertyChanged("QuestionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectedValue {
            get {
                return this.SelectedValueField;
            }
            set {
                if ((this.SelectedValueField.Equals(value) != true)) {
                    this.SelectedValueField = value;
                    this.RaisePropertyChanged("SelectedValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SharedWithId {
            get {
                return this.SharedWithIdField;
            }
            set {
                if ((this.SharedWithIdField.Equals(value) != true)) {
                    this.SharedWithIdField = value;
                    this.RaisePropertyChanged("SharedWithId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubId {
            get {
                return this.SubIdField;
            }
            set {
                if ((this.SubIdField.Equals(value) != true)) {
                    this.SubIdField = value;
                    this.RaisePropertyChanged("SubId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssignPoe", Namespace="")]
    [System.SerializableAttribute()]
    public partial class AssignPoe : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DesignationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PoeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DesignationId {
            get {
                return this.DesignationIdField;
            }
            set {
                if ((this.DesignationIdField.Equals(value) != true)) {
                    this.DesignationIdField = value;
                    this.RaisePropertyChanged("DesignationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Emailid {
            get {
                return this.EmailidField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailidField, value) != true)) {
                    this.EmailidField = value;
                    this.RaisePropertyChanged("Emailid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobTitle {
            get {
                return this.JobTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.JobTitleField, value) != true)) {
                    this.JobTitleField = value;
                    this.RaisePropertyChanged("JobTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PoeId {
            get {
                return this.PoeIdField;
            }
            set {
                if ((this.PoeIdField.Equals(value) != true)) {
                    this.PoeIdField = value;
                    this.RaisePropertyChanged("PoeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubId {
            get {
                return this.SubIdField;
            }
            set {
                if ((this.SubIdField.Equals(value) != true)) {
                    this.SubIdField = value;
                    this.RaisePropertyChanged("SubId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreatedFeedback", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Response")]
    [System.SerializableAttribute()]
    public partial class CreatedFeedback : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FeedBackIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequestedUserMappingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TeamUserMappingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.UserPOEMapping TeammemberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserMappingIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FeedBackId {
            get {
                return this.FeedBackIdField;
            }
            set {
                if ((this.FeedBackIdField.Equals(value) != true)) {
                    this.FeedBackIdField = value;
                    this.RaisePropertyChanged("FeedBackId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequestedUserMappingId {
            get {
                return this.RequestedUserMappingIdField;
            }
            set {
                if ((this.RequestedUserMappingIdField.Equals(value) != true)) {
                    this.RequestedUserMappingIdField = value;
                    this.RaisePropertyChanged("RequestedUserMappingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TeamUserMappingId {
            get {
                return this.TeamUserMappingIdField;
            }
            set {
                if ((this.TeamUserMappingIdField.Equals(value) != true)) {
                    this.TeamUserMappingIdField = value;
                    this.RaisePropertyChanged("TeamUserMappingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.UserPOEMapping Teammember {
            get {
                return this.TeammemberField;
            }
            set {
                if ((object.ReferenceEquals(this.TeammemberField, value) != true)) {
                    this.TeammemberField = value;
                    this.RaisePropertyChanged("Teammember");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserMappingId {
            get {
                return this.UserMappingIdField;
            }
            set {
                if ((this.UserMappingIdField.Equals(value) != true)) {
                    this.UserMappingIdField = value;
                    this.RaisePropertyChanged("UserMappingId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SyncScoreCollection", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Response")]
    [System.SerializableAttribute()]
    public partial class SyncScoreCollection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChildIndexName1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChildIndexName2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.SyncScore RScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.SyncScore TScoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChildIndexName1 {
            get {
                return this.ChildIndexName1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ChildIndexName1Field, value) != true)) {
                    this.ChildIndexName1Field = value;
                    this.RaisePropertyChanged("ChildIndexName1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChildIndexName2 {
            get {
                return this.ChildIndexName2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ChildIndexName2Field, value) != true)) {
                    this.ChildIndexName2Field = value;
                    this.RaisePropertyChanged("ChildIndexName2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.SyncScore RScore {
            get {
                return this.RScoreField;
            }
            set {
                if ((object.ReferenceEquals(this.RScoreField, value) != true)) {
                    this.RScoreField = value;
                    this.RaisePropertyChanged("RScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.SyncScore TScore {
            get {
                return this.TScoreField;
            }
            set {
                if ((object.ReferenceEquals(this.TScoreField, value) != true)) {
                    this.TScoreField = value;
                    this.RaisePropertyChanged("TScore");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SyncScore", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Response")]
    [System.SerializableAttribute()]
    public partial class SyncScore : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FeedbackidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.SyncModuleScore[] ModuleScoresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PoeidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WcsiScoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Feedbackid {
            get {
                return this.FeedbackidField;
            }
            set {
                if ((this.FeedbackidField.Equals(value) != true)) {
                    this.FeedbackidField = value;
                    this.RaisePropertyChanged("Feedbackid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.SyncModuleScore[] ModuleScores {
            get {
                return this.ModuleScoresField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleScoresField, value) != true)) {
                    this.ModuleScoresField = value;
                    this.RaisePropertyChanged("ModuleScores");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PoeName {
            get {
                return this.PoeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PoeNameField, value) != true)) {
                    this.PoeNameField = value;
                    this.RaisePropertyChanged("PoeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Poeid {
            get {
                return this.PoeidField;
            }
            set {
                if ((this.PoeidField.Equals(value) != true)) {
                    this.PoeidField = value;
                    this.RaisePropertyChanged("Poeid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WcsiScore {
            get {
                return this.WcsiScoreField;
            }
            set {
                if ((this.WcsiScoreField.Equals(value) != true)) {
                    this.WcsiScoreField = value;
                    this.RaisePropertyChanged("WcsiScore");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SyncModuleScore", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Response")]
    [System.SerializableAttribute()]
    public partial class SyncModuleScore : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModuleOrderNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ModuleScoreAvgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ModuleScorePercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModuleidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> ModulescoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SendYammerMessages.CommonService.SyncQuestionScore[] QuestionScoresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float TotalModulescoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> WeightageScoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleName {
            get {
                return this.ModuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleNameField, value) != true)) {
                    this.ModuleNameField = value;
                    this.RaisePropertyChanged("ModuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModuleOrderNumber {
            get {
                return this.ModuleOrderNumberField;
            }
            set {
                if ((this.ModuleOrderNumberField.Equals(value) != true)) {
                    this.ModuleOrderNumberField = value;
                    this.RaisePropertyChanged("ModuleOrderNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ModuleScoreAvg {
            get {
                return this.ModuleScoreAvgField;
            }
            set {
                if ((this.ModuleScoreAvgField.Equals(value) != true)) {
                    this.ModuleScoreAvgField = value;
                    this.RaisePropertyChanged("ModuleScoreAvg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ModuleScorePercentage {
            get {
                return this.ModuleScorePercentageField;
            }
            set {
                if ((this.ModuleScorePercentageField.Equals(value) != true)) {
                    this.ModuleScorePercentageField = value;
                    this.RaisePropertyChanged("ModuleScorePercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Moduleid {
            get {
                return this.ModuleidField;
            }
            set {
                if ((this.ModuleidField.Equals(value) != true)) {
                    this.ModuleidField = value;
                    this.RaisePropertyChanged("Moduleid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Modulescore {
            get {
                return this.ModulescoreField;
            }
            set {
                if ((this.ModulescoreField.Equals(value) != true)) {
                    this.ModulescoreField = value;
                    this.RaisePropertyChanged("Modulescore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SendYammerMessages.CommonService.SyncQuestionScore[] QuestionScores {
            get {
                return this.QuestionScoresField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionScoresField, value) != true)) {
                    this.QuestionScoresField = value;
                    this.RaisePropertyChanged("QuestionScores");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float TotalModulescore {
            get {
                return this.TotalModulescoreField;
            }
            set {
                if ((this.TotalModulescoreField.Equals(value) != true)) {
                    this.TotalModulescoreField = value;
                    this.RaisePropertyChanged("TotalModulescore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> WeightageScore {
            get {
                return this.WeightageScoreField;
            }
            set {
                if ((this.WeightageScoreField.Equals(value) != true)) {
                    this.WeightageScoreField = value;
                    this.RaisePropertyChanged("WeightageScore");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SyncWcsiDiff", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Response")]
    [System.SerializableAttribute()]
    public partial class SyncWcsiDiff : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TeamtileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double YoutileField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Teamtile {
            get {
                return this.TeamtileField;
            }
            set {
                if ((this.TeamtileField.Equals(value) != true)) {
                    this.TeamtileField = value;
                    this.RaisePropertyChanged("Teamtile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Youtile {
            get {
                return this.YoutileField;
            }
            set {
                if ((this.YoutileField.Equals(value) != true)) {
                    this.YoutileField = value;
                    this.RaisePropertyChanged("Youtile");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Plan", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Domain")]
    [System.SerializableAttribute()]
    public partial class Plan : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxPoeCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxUsercountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlanIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlanNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PoeCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UserCostField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxPoeCount {
            get {
                return this.MaxPoeCountField;
            }
            set {
                if ((this.MaxPoeCountField.Equals(value) != true)) {
                    this.MaxPoeCountField = value;
                    this.RaisePropertyChanged("MaxPoeCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxUsercount {
            get {
                return this.MaxUsercountField;
            }
            set {
                if ((this.MaxUsercountField.Equals(value) != true)) {
                    this.MaxUsercountField = value;
                    this.RaisePropertyChanged("MaxUsercount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlanId {
            get {
                return this.PlanIdField;
            }
            set {
                if ((this.PlanIdField.Equals(value) != true)) {
                    this.PlanIdField = value;
                    this.RaisePropertyChanged("PlanId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlanName {
            get {
                return this.PlanNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanNameField, value) != true)) {
                    this.PlanNameField = value;
                    this.RaisePropertyChanged("PlanName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PoeCost {
            get {
                return this.PoeCostField;
            }
            set {
                if ((this.PoeCostField.Equals(value) != true)) {
                    this.PoeCostField = value;
                    this.RaisePropertyChanged("PoeCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UserCost {
            get {
                return this.UserCostField;
            }
            set {
                if ((this.UserCostField.Equals(value) != true)) {
                    this.UserCostField = value;
                    this.RaisePropertyChanged("UserCost");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ManagerReports", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Domain")]
    [System.SerializableAttribute()]
    public partial class ManagerReports : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompletedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManagerEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManagerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TeamEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TeamNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompletedOn {
            get {
                return this.CompletedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CompletedOnField, value) != true)) {
                    this.CompletedOnField = value;
                    this.RaisePropertyChanged("CompletedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManagerEmail {
            get {
                return this.ManagerEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagerEmailField, value) != true)) {
                    this.ManagerEmailField = value;
                    this.RaisePropertyChanged("ManagerEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManagerName {
            get {
                return this.ManagerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagerNameField, value) != true)) {
                    this.ManagerNameField = value;
                    this.RaisePropertyChanged("ManagerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PoeName {
            get {
                return this.PoeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PoeNameField, value) != true)) {
                    this.PoeNameField = value;
                    this.RaisePropertyChanged("PoeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Relation {
            get {
                return this.RelationField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationField, value) != true)) {
                    this.RelationField = value;
                    this.RaisePropertyChanged("Relation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TeamEmail {
            get {
                return this.TeamEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamEmailField, value) != true)) {
                    this.TeamEmailField = value;
                    this.RaisePropertyChanged("TeamEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TeamName {
            get {
                return this.TeamNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamNameField, value) != true)) {
                    this.TeamNameField = value;
                    this.RaisePropertyChanged("TeamName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TeamReports", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Domain")]
    [System.SerializableAttribute()]
    public partial class TeamReports : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompletedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompletedOn {
            get {
                return this.CompletedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CompletedOnField, value) != true)) {
                    this.CompletedOnField = value;
                    this.RaisePropertyChanged("CompletedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PoeName {
            get {
                return this.PoeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PoeNameField, value) != true)) {
                    this.PoeNameField = value;
                    this.RaisePropertyChanged("PoeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Relation {
            get {
                return this.RelationField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationField, value) != true)) {
                    this.RelationField = value;
                    this.RaisePropertyChanged("Relation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="YammerContent", Namespace="http://schemas.datacontract.org/2004/07/bExcellent.Service.Util.Domain")]
    [System.SerializableAttribute()]
    public partial class YammerContent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromMailidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToMailidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string YammerTokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromMailid {
            get {
                return this.FromMailidField;
            }
            set {
                if ((object.ReferenceEquals(this.FromMailidField, value) != true)) {
                    this.FromMailidField = value;
                    this.RaisePropertyChanged("FromMailid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Groupid {
            get {
                return this.GroupidField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupidField, value) != true)) {
                    this.GroupidField = value;
                    this.RaisePropertyChanged("Groupid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToMailid {
            get {
                return this.ToMailidField;
            }
            set {
                if ((object.ReferenceEquals(this.ToMailidField, value) != true)) {
                    this.ToMailidField = value;
                    this.RaisePropertyChanged("ToMailid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string YammerToken {
            get {
                return this.YammerTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.YammerTokenField, value) != true)) {
                    this.YammerTokenField = value;
                    this.RaisePropertyChanged("YammerToken");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CommonService.Common")]
    public interface Common {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetPoEsByUserId", ReplyAction="http://tempuri.org/Common/GetPoEsByUserIdResponse")]
        SendYammerMessages.CommonService.MinimizedPOE[] GetPoEsByUserId(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetPoEsByUserId", ReplyAction="http://tempuri.org/Common/GetPoEsByUserIdResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.MinimizedPOE[]> GetPoEsByUserIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMySubscribedPoes", ReplyAction="http://tempuri.org/Common/GetMySubscribedPoesResponse")]
        SendYammerMessages.CommonService.MinimizedPOE[] GetMySubscribedPoes(int subId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMySubscribedPoes", ReplyAction="http://tempuri.org/Common/GetMySubscribedPoesResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.MinimizedPOE[]> GetMySubscribedPoesAsync(int subId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMySubscribedPoeList", ReplyAction="http://tempuri.org/Common/GetMySubscribedPoeListResponse")]
        SendYammerMessages.CommonService.MinimizedPOE[] GetMySubscribedPoeList(int userid, int subId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMySubscribedPoeList", ReplyAction="http://tempuri.org/Common/GetMySubscribedPoeListResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.MinimizedPOE[]> GetMySubscribedPoeListAsync(int userid, int subId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetUserMappingDetails", ReplyAction="http://tempuri.org/Common/GetUserMappingDetailsResponse")]
        SendYammerMessages.CommonService.UserPOEMapping[] GetUserMappingDetails(int userId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetUserMappingDetails", ReplyAction="http://tempuri.org/Common/GetUserMappingDetailsResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping[]> GetUserMappingDetailsAsync(int userId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetAccountDetail", ReplyAction="http://tempuri.org/Common/GetAccountDetailResponse")]
        SendYammerMessages.CommonService.Accounts[] GetAccountDetail(int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetAccountDetail", ReplyAction="http://tempuri.org/Common/GetAccountDetailResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.Accounts[]> GetAccountDetailAsync(int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetPoeContent", ReplyAction="http://tempuri.org/Common/GetPoeContentResponse")]
        SendYammerMessages.CommonService.PoeModules GetPoeContent(int poeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetPoeContent", ReplyAction="http://tempuri.org/Common/GetPoeContentResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.PoeModules> GetPoeContentAsync(int poeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetUserRole", ReplyAction="http://tempuri.org/Common/GetUserRoleResponse")]
        int GetUserRole(int userId, int poeId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetUserRole", ReplyAction="http://tempuri.org/Common/GetUserRoleResponse")]
        System.Threading.Tasks.Task<int> GetUserRoleAsync(int userId, int poeId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyTeammembers", ReplyAction="http://tempuri.org/Common/GetMyTeammembersResponse")]
        SendYammerMessages.CommonService.UserPOEMapping[] GetMyTeammembers(int userId, int poeId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyTeammembers", ReplyAction="http://tempuri.org/Common/GetMyTeammembersResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping[]> GetMyTeammembersAsync(int userId, int poeId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyGiveFbTeam", ReplyAction="http://tempuri.org/Common/GetMyGiveFbTeamResponse")]
        SendYammerMessages.CommonService.UserPOEMapping[] GetMyGiveFbTeam(int userId, int poeId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyGiveFbTeam", ReplyAction="http://tempuri.org/Common/GetMyGiveFbTeamResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping[]> GetMyGiveFbTeamAsync(int userId, int poeId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyGiveFbTeamList", ReplyAction="http://tempuri.org/Common/GetMyGiveFbTeamListResponse")]
        SendYammerMessages.CommonService.UserPOEMapping[] GetMyGiveFbTeamList(int userId, int poeId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyGiveFbTeamList", ReplyAction="http://tempuri.org/Common/GetMyGiveFbTeamListResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping[]> GetMyGiveFbTeamListAsync(int userId, int poeId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyReceiveFbTeam", ReplyAction="http://tempuri.org/Common/GetMyReceiveFbTeamResponse")]
        SendYammerMessages.CommonService.UserPOEMapping[] GetMyReceiveFbTeam(int userId, int poeId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyReceiveFbTeam", ReplyAction="http://tempuri.org/Common/GetMyReceiveFbTeamResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping[]> GetMyReceiveFbTeamAsync(int userId, int poeId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyReceiveFbTeamList", ReplyAction="http://tempuri.org/Common/GetMyReceiveFbTeamListResponse")]
        SendYammerMessages.CommonService.UserPOEMapping[] GetMyReceiveFbTeamList(int userId, int poeId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyReceiveFbTeamList", ReplyAction="http://tempuri.org/Common/GetMyReceiveFbTeamListResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping[]> GetMyReceiveFbTeamListAsync(int userId, int poeId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyManager", ReplyAction="http://tempuri.org/Common/GetMyManagerResponse")]
        SendYammerMessages.CommonService.UserPOEMapping[] GetMyManager(int userId, int poeId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyManager", ReplyAction="http://tempuri.org/Common/GetMyManagerResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping[]> GetMyManagerAsync(int userId, int poeId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyCustomers", ReplyAction="http://tempuri.org/Common/GetMyCustomersResponse")]
        SendYammerMessages.CommonService.UserPOEMapping[] GetMyCustomers(int userId, int poeId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyCustomers", ReplyAction="http://tempuri.org/Common/GetMyCustomersResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping[]> GetMyCustomersAsync(int userId, int poeId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyPeers", ReplyAction="http://tempuri.org/Common/GetMyPeersResponse")]
        SendYammerMessages.CommonService.UserPOEMapping[] GetMyPeers(int userId, int poeId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyPeers", ReplyAction="http://tempuri.org/Common/GetMyPeersResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping[]> GetMyPeersAsync(int userId, int poeId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyFullNetwork", ReplyAction="http://tempuri.org/Common/GetMyFullNetworkResponse")]
        SendYammerMessages.CommonService.UserPOEMapping[] GetMyFullNetwork(int userId, int poeId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyFullNetwork", ReplyAction="http://tempuri.org/Common/GetMyFullNetworkResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping[]> GetMyFullNetworkAsync(int userId, int poeId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetNetworksUsersWall", ReplyAction="http://tempuri.org/Common/GetNetworksUsersWallResponse")]
        SendYammerMessages.CommonService.UserPOEMapping[] GetNetworksUsersWall(int userId, int POEId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetNetworksUsersWall", ReplyAction="http://tempuri.org/Common/GetNetworksUsersWallResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping[]> GetNetworksUsersWallAsync(int userId, int POEId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyNetworkCount", ReplyAction="http://tempuri.org/Common/GetMyNetworkCountResponse")]
        int GetMyNetworkCount(int userId, int poeId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyNetworkCount", ReplyAction="http://tempuri.org/Common/GetMyNetworkCountResponse")]
        System.Threading.Tasks.Task<int> GetMyNetworkCountAsync(int userId, int poeId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetUserDetailsByEmailId", ReplyAction="http://tempuri.org/Common/GetUserDetailsByEmailIdResponse")]
        SendYammerMessages.CommonService.User GetUserDetailsByEmailId(string emailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetUserDetailsByEmailId", ReplyAction="http://tempuri.org/Common/GetUserDetailsByEmailIdResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.User> GetUserDetailsByEmailIdAsync(string emailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyDetail", ReplyAction="http://tempuri.org/Common/GetMyDetailResponse")]
        SendYammerMessages.CommonService.UserPOEMapping GetMyDetail(int userid, int poeid, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyDetail", ReplyAction="http://tempuri.org/Common/GetMyDetailResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping> GetMyDetailAsync(int userid, int poeid, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyDetailWithArea", ReplyAction="http://tempuri.org/Common/GetMyDetailWithAreaResponse")]
        SendYammerMessages.CommonService.UserPOEMapping GetMyDetailWithArea(int userid, int poeid, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyDetailWithArea", ReplyAction="http://tempuri.org/Common/GetMyDetailWithAreaResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping> GetMyDetailWithAreaAsync(int userid, int poeid, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetAllCounties", ReplyAction="http://tempuri.org/Common/GetAllCountiesResponse")]
        SendYammerMessages.CommonService.Country[] GetAllCounties();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetAllCounties", ReplyAction="http://tempuri.org/Common/GetAllCountiesResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.Country[]> GetAllCountiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetAllArea", ReplyAction="http://tempuri.org/Common/GetAllAreaResponse")]
        SendYammerMessages.CommonService.Zone[] GetAllArea();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetAllArea", ReplyAction="http://tempuri.org/Common/GetAllAreaResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.Zone[]> GetAllAreaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetUserPhoto", ReplyAction="http://tempuri.org/Common/GetUserPhotoResponse")]
        SendYammerMessages.CommonService.User GetUserPhoto(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetUserPhoto", ReplyAction="http://tempuri.org/Common/GetUserPhotoResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.User> GetUserPhotoAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/UpdateUserPhoto", ReplyAction="http://tempuri.org/Common/UpdateUserPhotoResponse")]
        bool UpdateUserPhoto(int userId, byte[] photo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/UpdateUserPhoto", ReplyAction="http://tempuri.org/Common/UpdateUserPhotoResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserPhotoAsync(int userId, byte[] photo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/UpdateUserDetails", ReplyAction="http://tempuri.org/Common/UpdateUserDetailsResponse")]
        bool UpdateUserDetails(string firstName, string lastName, string companyName, string jobTitle, int countryId, int userId, int areaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/UpdateUserDetails", ReplyAction="http://tempuri.org/Common/UpdateUserDetailsResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserDetailsAsync(string firstName, string lastName, string companyName, string jobTitle, int countryId, int userId, int areaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/UpdatePassword", ReplyAction="http://tempuri.org/Common/UpdatePasswordResponse")]
        bool UpdatePassword(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/UpdatePassword", ReplyAction="http://tempuri.org/Common/UpdatePasswordResponse")]
        System.Threading.Tasks.Task<bool> UpdatePasswordAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetPassword", ReplyAction="http://tempuri.org/Common/GetPasswordResponse")]
        bool GetPassword(string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetPassword", ReplyAction="http://tempuri.org/Common/GetPasswordResponse")]
        System.Threading.Tasks.Task<bool> GetPasswordAsync(string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/CheckEmailId", ReplyAction="http://tempuri.org/Common/CheckEmailIdResponse")]
        bool CheckEmailId(string EmailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/CheckEmailId", ReplyAction="http://tempuri.org/Common/CheckEmailIdResponse")]
        System.Threading.Tasks.Task<bool> CheckEmailIdAsync(string EmailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/UpdatePageMode", ReplyAction="http://tempuri.org/Common/UpdatePageModeResponse")]
        void UpdatePageMode(int userid, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/UpdatePageMode", ReplyAction="http://tempuri.org/Common/UpdatePageModeResponse")]
        System.Threading.Tasks.Task UpdatePageModeAsync(int userid, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetPoeName", ReplyAction="http://tempuri.org/Common/GetPoeNameResponse")]
        string GetPoeName(int poeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetPoeName", ReplyAction="http://tempuri.org/Common/GetPoeNameResponse")]
        System.Threading.Tasks.Task<string> GetPoeNameAsync(int poeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetPasswordForUSer", ReplyAction="http://tempuri.org/Common/GetPasswordForUSerResponse")]
        string GetPasswordForUSer(string emailid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetPasswordForUSer", ReplyAction="http://tempuri.org/Common/GetPasswordForUSerResponse")]
        System.Threading.Tasks.Task<string> GetPasswordForUSerAsync(string emailid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/CheckMapping", ReplyAction="http://tempuri.org/Common/CheckMappingResponse")]
        int CheckMapping(int userId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/CheckMapping", ReplyAction="http://tempuri.org/Common/CheckMappingResponse")]
        System.Threading.Tasks.Task<int> CheckMappingAsync(int userId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetUserSubscriptions", ReplyAction="http://tempuri.org/Common/GetUserSubscriptionsResponse")]
        SendYammerMessages.CommonService.Network[] GetUserSubscriptions(string emailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetUserSubscriptions", ReplyAction="http://tempuri.org/Common/GetUserSubscriptionsResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.Network[]> GetUserSubscriptionsAsync(string emailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMySubscription", ReplyAction="http://tempuri.org/Common/GetMySubscriptionResponse")]
        SendYammerMessages.CommonService.Network[] GetMySubscription(string emailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMySubscription", ReplyAction="http://tempuri.org/Common/GetMySubscriptionResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.Network[]> GetMySubscriptionAsync(string emailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyActivities", ReplyAction="http://tempuri.org/Common/GetMyActivitiesResponse")]
        SendYammerMessages.CommonService.V3_GetMyActivitiesResult[] GetMyActivities(int userId, int subscriptionId, int sourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyActivities", ReplyAction="http://tempuri.org/Common/GetMyActivitiesResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.V3_GetMyActivitiesResult[]> GetMyActivitiesAsync(int userId, int subscriptionId, int sourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetUserList", ReplyAction="http://tempuri.org/Common/GetUserListResponse")]
        SendYammerMessages.CommonService.V3_GetUserListByBatchIdResult[] GetUserList(string batchid, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetUserList", ReplyAction="http://tempuri.org/Common/GetUserListResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.V3_GetUserListByBatchIdResult[]> GetUserListAsync(string batchid, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetDefaultUserSubscription", ReplyAction="http://tempuri.org/Common/GetDefaultUserSubscriptionResponse")]
        SendYammerMessages.CommonService.Network GetDefaultUserSubscription(string emailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetDefaultUserSubscription", ReplyAction="http://tempuri.org/Common/GetDefaultUserSubscriptionResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.Network> GetDefaultUserSubscriptionAsync(string emailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetOwnNetwork", ReplyAction="http://tempuri.org/Common/GetOwnNetworkResponse")]
        SendYammerMessages.CommonService.Network GetOwnNetwork(string emailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetOwnNetwork", ReplyAction="http://tempuri.org/Common/GetOwnNetworkResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.Network> GetOwnNetworkAsync(string emailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/DeleteUser", ReplyAction="http://tempuri.org/Common/DeleteUserResponse")]
        bool DeleteUser(int userid, int poeid, int subscriptionid, int level, int deleteId, int deletepeer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/DeleteUser", ReplyAction="http://tempuri.org/Common/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(int userid, int poeid, int subscriptionid, int level, int deleteId, int deletepeer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/CreateActivity", ReplyAction="http://tempuri.org/Common/CreateActivityResponse")]
        bool CreateActivity(int userid, string toids, int subid, int sourceid, string activity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/CreateActivity", ReplyAction="http://tempuri.org/Common/CreateActivityResponse")]
        System.Threading.Tasks.Task<bool> CreateActivityAsync(int userid, string toids, int subid, int sourceid, string activity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/SendConnectMail", ReplyAction="http://tempuri.org/Common/SendConnectMailResponse")]
        bool SendConnectMail(int userid, string toids, int poeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/SendConnectMail", ReplyAction="http://tempuri.org/Common/SendConnectMailResponse")]
        System.Threading.Tasks.Task<bool> SendConnectMailAsync(int userid, string toids, int poeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/SendMailFromWall", ReplyAction="http://tempuri.org/Common/SendMailFromWallResponse")]
        bool SendMailFromWall(int type, string fromname, string toIds, bool hasAttachment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/SendMailFromWall", ReplyAction="http://tempuri.org/Common/SendMailFromWallResponse")]
        System.Threading.Tasks.Task<bool> SendMailFromWallAsync(int type, string fromname, string toIds, bool hasAttachment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyUsers", ReplyAction="http://tempuri.org/Common/GetMyUsersResponse")]
        SendYammerMessages.CommonService.UserPOEMapping[] GetMyUsers(int userId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyUsers", ReplyAction="http://tempuri.org/Common/GetMyUsersResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping[]> GetMyUsersAsync(int userId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyAllUsers", ReplyAction="http://tempuri.org/Common/GetMyAllUsersResponse")]
        SendYammerMessages.CommonService.UserPOEMapping[] GetMyAllUsers(int userId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyAllUsers", ReplyAction="http://tempuri.org/Common/GetMyAllUsersResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping[]> GetMyAllUsersAsync(int userId, int subscriptionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetStanding", ReplyAction="http://tempuri.org/Common/GetStandingResponse")]
        SendYammerMessages.CommonService.Standing GetStanding(int poeid, int userid, int tileclicked, int subid, string domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetStanding", ReplyAction="http://tempuri.org/Common/GetStandingResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.Standing> GetStandingAsync(int poeid, int userid, int tileclicked, int subid, string domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetStandingTileScore", ReplyAction="http://tempuri.org/Common/GetStandingTileScoreResponse")]
        SendYammerMessages.CommonService.Standing GetStandingTileScore(int poeid, int userid, int subid, string domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetStandingTileScore", ReplyAction="http://tempuri.org/Common/GetStandingTileScoreResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.Standing> GetStandingTileScoreAsync(int poeid, int userid, int subid, string domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetUserRoles", ReplyAction="http://tempuri.org/Common/GetUserRolesResponse")]
        SendYammerMessages.CommonService.UserRole[] GetUserRoles(int userid, int subid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetUserRoles", ReplyAction="http://tempuri.org/Common/GetUserRolesResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserRole[]> GetUserRolesAsync(int userid, int subid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetUserPoeByRole", ReplyAction="http://tempuri.org/Common/GetUserPoeByRoleResponse")]
        SendYammerMessages.CommonService.POE[] GetUserPoeByRole(int userid, int subid, int role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetUserPoeByRole", ReplyAction="http://tempuri.org/Common/GetUserPoeByRoleResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.POE[]> GetUserPoeByRoleAsync(int userid, int subid, int role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetUserPoeByType", ReplyAction="http://tempuri.org/Common/GetUserPoeByTypeResponse")]
        SendYammerMessages.CommonService.POE[] GetUserPoeByType(int userid, int subid, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetUserPoeByType", ReplyAction="http://tempuri.org/Common/GetUserPoeByTypeResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.POE[]> GetUserPoeByTypeAsync(int userid, int subid, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/SaveGoal", ReplyAction="http://tempuri.org/Common/SaveGoalResponse")]
        bool SaveGoal(SendYammerMessages.CommonService.GoalShare goals);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/SaveGoal", ReplyAction="http://tempuri.org/Common/SaveGoalResponse")]
        System.Threading.Tasks.Task<bool> SaveGoalAsync(SendYammerMessages.CommonService.GoalShare goals);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/SaveGoals", ReplyAction="http://tempuri.org/Common/SaveGoalsResponse")]
        bool SaveGoals(SendYammerMessages.CommonService.GoalShare[] goalShares);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/SaveGoals", ReplyAction="http://tempuri.org/Common/SaveGoalsResponse")]
        System.Threading.Tasks.Task<bool> SaveGoalsAsync(SendYammerMessages.CommonService.GoalShare[] goalShares);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/AssignPoe", ReplyAction="http://tempuri.org/Common/AssignPoeResponse")]
        bool AssignPoe([System.ServiceModel.MessageParameterAttribute(Name="assignpoe")] SendYammerMessages.CommonService.AssignPoe[] assignpoe1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/AssignPoe", ReplyAction="http://tempuri.org/Common/AssignPoeResponse")]
        System.Threading.Tasks.Task<bool> AssignPoeAsync(SendYammerMessages.CommonService.AssignPoe[] assignpoe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyGoals", ReplyAction="http://tempuri.org/Common/GetMyGoalsResponse")]
        SendYammerMessages.CommonService.ModulesGoal[] GetMyGoals(int poeId, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetMyGoals", ReplyAction="http://tempuri.org/Common/GetMyGoalsResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.ModulesGoal[]> GetMyGoalsAsync(int poeId, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetUserdetailsByMappingId", ReplyAction="http://tempuri.org/Common/GetUserdetailsByMappingIdResponse")]
        SendYammerMessages.CommonService.UserPOEMapping GetUserdetailsByMappingId(int mappingid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetUserdetailsByMappingId", ReplyAction="http://tempuri.org/Common/GetUserdetailsByMappingIdResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping> GetUserdetailsByMappingIdAsync(int mappingid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetUserDetailsByFbId", ReplyAction="http://tempuri.org/Common/GetUserDetailsByFbIdResponse")]
        SendYammerMessages.CommonService.UserPOEMapping GetUserDetailsByFbId(int fbId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetUserDetailsByFbId", ReplyAction="http://tempuri.org/Common/GetUserDetailsByFbIdResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping> GetUserDetailsByFbIdAsync(int fbId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetFeedbacksByGroupId", ReplyAction="http://tempuri.org/Common/GetFeedbacksByGroupIdResponse")]
        SendYammerMessages.CommonService.CreatedFeedback[] GetFeedbacksByGroupId(string groupid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetFeedbacksByGroupId", ReplyAction="http://tempuri.org/Common/GetFeedbacksByGroupIdResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.CreatedFeedback[]> GetFeedbacksByGroupIdAsync(string groupid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetSubscribedUserWall", ReplyAction="http://tempuri.org/Common/GetSubscribedUserWallResponse")]
        SendYammerMessages.CommonService.User[] GetSubscribedUserWall(int userid, int subId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetSubscribedUserWall", ReplyAction="http://tempuri.org/Common/GetSubscribedUserWallResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.User[]> GetSubscribedUserWallAsync(int userid, int subId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetSyncScores", ReplyAction="http://tempuri.org/Common/GetSyncScoresResponse")]
        SendYammerMessages.CommonService.SyncScoreCollection GetSyncScores(int userid, int poeid, int subid, int usermapping, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetSyncScores", ReplyAction="http://tempuri.org/Common/GetSyncScoresResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.SyncScoreCollection> GetSyncScoresAsync(int userid, int poeid, int subid, int usermapping, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetSyncScoresOverall", ReplyAction="http://tempuri.org/Common/GetSyncScoresOverallResponse")]
        SendYammerMessages.CommonService.SyncScoreCollection GetSyncScoresOverall(int userid, int poeid, int subid, int usermapping, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetSyncScoresOverall", ReplyAction="http://tempuri.org/Common/GetSyncScoresOverallResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.SyncScoreCollection> GetSyncScoresOverallAsync(int userid, int poeid, int subid, int usermapping, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetAvgSyncScores", ReplyAction="http://tempuri.org/Common/GetAvgSyncScoresResponse")]
        SendYammerMessages.CommonService.SyncScoreCollection GetAvgSyncScores(int userid, int poeid, int subid, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetAvgSyncScores", ReplyAction="http://tempuri.org/Common/GetAvgSyncScoresResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.SyncScoreCollection> GetAvgSyncScoresAsync(int userid, int poeid, int subid, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetSyncScoresByFbId", ReplyAction="http://tempuri.org/Common/GetSyncScoresByFbIdResponse")]
        SendYammerMessages.CommonService.SyncScoreCollection GetSyncScoresByFbId(int userid, int poeid, int subid, int usermapping, int type, int fbid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetSyncScoresByFbId", ReplyAction="http://tempuri.org/Common/GetSyncScoresByFbIdResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.SyncScoreCollection> GetSyncScoresByFbIdAsync(int userid, int poeid, int subid, int usermapping, int type, int fbid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetSyncTeamScore", ReplyAction="http://tempuri.org/Common/GetSyncTeamScoreResponse")]
        SendYammerMessages.CommonService.SyncScoreCollection GetSyncTeamScore(int userid, int poeid, int subid, int type, string groupid, int mappingid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetSyncTeamScore", ReplyAction="http://tempuri.org/Common/GetSyncTeamScoreResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.SyncScoreCollection> GetSyncTeamScoreAsync(int userid, int poeid, int subid, int type, string groupid, int mappingid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetAvgSyncScoresByFbId", ReplyAction="http://tempuri.org/Common/GetAvgSyncScoresByFbIdResponse")]
        SendYammerMessages.CommonService.SyncScoreCollection GetAvgSyncScoresByFbId(int userid, int poeid, int subid, int type, string fbids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetAvgSyncScoresByFbId", ReplyAction="http://tempuri.org/Common/GetAvgSyncScoresByFbIdResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.SyncScoreCollection> GetAvgSyncScoresByFbIdAsync(int userid, int poeid, int subid, int type, string fbids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetSyncWcsiDiff", ReplyAction="http://tempuri.org/Common/GetSyncWcsiDiffResponse")]
        SendYammerMessages.CommonService.SyncWcsiDiff GetSyncWcsiDiff(int userid, int poeid, int subid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetSyncWcsiDiff", ReplyAction="http://tempuri.org/Common/GetSyncWcsiDiffResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.SyncWcsiDiff> GetSyncWcsiDiffAsync(int userid, int poeid, int subid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetPlanById", ReplyAction="http://tempuri.org/Common/GetPlanByIdResponse")]
        SendYammerMessages.CommonService.Plan GetPlanById(int planId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetPlanById", ReplyAction="http://tempuri.org/Common/GetPlanByIdResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.Plan> GetPlanByIdAsync(int planId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/SendPoePdfNotification", ReplyAction="http://tempuri.org/Common/SendPoePdfNotificationResponse")]
        void SendPoePdfNotification(string emailContents, string subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/SendPoePdfNotification", ReplyAction="http://tempuri.org/Common/SendPoePdfNotificationResponse")]
        System.Threading.Tasks.Task SendPoePdfNotificationAsync(string emailContents, string subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GenerateManagerReport", ReplyAction="http://tempuri.org/Common/GenerateManagerReportResponse")]
        SendYammerMessages.CommonService.ManagerReports[] GenerateManagerReport(int poeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GenerateManagerReport", ReplyAction="http://tempuri.org/Common/GenerateManagerReportResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.ManagerReports[]> GenerateManagerReportAsync(int poeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GenerateTeamReport", ReplyAction="http://tempuri.org/Common/GenerateTeamReportResponse")]
        SendYammerMessages.CommonService.TeamReports[] GenerateTeamReport(int poeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GenerateTeamReport", ReplyAction="http://tempuri.org/Common/GenerateTeamReportResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.TeamReports[]> GenerateTeamReportAsync(int poeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/InsertYammerContent", ReplyAction="http://tempuri.org/Common/InsertYammerContentResponse")]
        void InsertYammerContent(string tomailid, string frmMailid, string imageurl, string subject, string groupid, string desc, string yammertoken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/InsertYammerContent", ReplyAction="http://tempuri.org/Common/InsertYammerContentResponse")]
        System.Threading.Tasks.Task InsertYammerContentAsync(string tomailid, string frmMailid, string imageurl, string subject, string groupid, string desc, string yammertoken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetYammerTopContent", ReplyAction="http://tempuri.org/Common/GetYammerTopContentResponse")]
        SendYammerMessages.CommonService.YammerContent[] GetYammerTopContent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/GetYammerTopContent", ReplyAction="http://tempuri.org/Common/GetYammerTopContentResponse")]
        System.Threading.Tasks.Task<SendYammerMessages.CommonService.YammerContent[]> GetYammerTopContentAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/UpdateYammercontent", ReplyAction="http://tempuri.org/Common/UpdateYammercontentResponse")]
        void UpdateYammercontent(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Common/UpdateYammercontent", ReplyAction="http://tempuri.org/Common/UpdateYammercontentResponse")]
        System.Threading.Tasks.Task UpdateYammercontentAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CommonChannel : SendYammerMessages.CommonService.Common, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommonClient : System.ServiceModel.ClientBase<SendYammerMessages.CommonService.Common>, SendYammerMessages.CommonService.Common {
        
        public CommonClient() {
        }
        
        public CommonClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommonClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SendYammerMessages.CommonService.MinimizedPOE[] GetPoEsByUserId(int userId) {
            return base.Channel.GetPoEsByUserId(userId);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.MinimizedPOE[]> GetPoEsByUserIdAsync(int userId) {
            return base.Channel.GetPoEsByUserIdAsync(userId);
        }
        
        public SendYammerMessages.CommonService.MinimizedPOE[] GetMySubscribedPoes(int subId) {
            return base.Channel.GetMySubscribedPoes(subId);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.MinimizedPOE[]> GetMySubscribedPoesAsync(int subId) {
            return base.Channel.GetMySubscribedPoesAsync(subId);
        }
        
        public SendYammerMessages.CommonService.MinimizedPOE[] GetMySubscribedPoeList(int userid, int subId) {
            return base.Channel.GetMySubscribedPoeList(userid, subId);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.MinimizedPOE[]> GetMySubscribedPoeListAsync(int userid, int subId) {
            return base.Channel.GetMySubscribedPoeListAsync(userid, subId);
        }
        
        public SendYammerMessages.CommonService.UserPOEMapping[] GetUserMappingDetails(int userId, int subscriptionid) {
            return base.Channel.GetUserMappingDetails(userId, subscriptionid);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping[]> GetUserMappingDetailsAsync(int userId, int subscriptionid) {
            return base.Channel.GetUserMappingDetailsAsync(userId, subscriptionid);
        }
        
        public SendYammerMessages.CommonService.Accounts[] GetAccountDetail(int subscriptionid) {
            return base.Channel.GetAccountDetail(subscriptionid);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.Accounts[]> GetAccountDetailAsync(int subscriptionid) {
            return base.Channel.GetAccountDetailAsync(subscriptionid);
        }
        
        public SendYammerMessages.CommonService.PoeModules GetPoeContent(int poeid) {
            return base.Channel.GetPoeContent(poeid);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.PoeModules> GetPoeContentAsync(int poeid) {
            return base.Channel.GetPoeContentAsync(poeid);
        }
        
        public int GetUserRole(int userId, int poeId, int subscriptionid) {
            return base.Channel.GetUserRole(userId, poeId, subscriptionid);
        }
        
        public System.Threading.Tasks.Task<int> GetUserRoleAsync(int userId, int poeId, int subscriptionid) {
            return base.Channel.GetUserRoleAsync(userId, poeId, subscriptionid);
        }
        
        public SendYammerMessages.CommonService.UserPOEMapping[] GetMyTeammembers(int userId, int poeId, int subscriptionid) {
            return base.Channel.GetMyTeammembers(userId, poeId, subscriptionid);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping[]> GetMyTeammembersAsync(int userId, int poeId, int subscriptionid) {
            return base.Channel.GetMyTeammembersAsync(userId, poeId, subscriptionid);
        }
        
        public SendYammerMessages.CommonService.UserPOEMapping[] GetMyGiveFbTeam(int userId, int poeId, int subscriptionid) {
            return base.Channel.GetMyGiveFbTeam(userId, poeId, subscriptionid);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping[]> GetMyGiveFbTeamAsync(int userId, int poeId, int subscriptionid) {
            return base.Channel.GetMyGiveFbTeamAsync(userId, poeId, subscriptionid);
        }
        
        public SendYammerMessages.CommonService.UserPOEMapping[] GetMyGiveFbTeamList(int userId, int poeId, int subscriptionid) {
            return base.Channel.GetMyGiveFbTeamList(userId, poeId, subscriptionid);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping[]> GetMyGiveFbTeamListAsync(int userId, int poeId, int subscriptionid) {
            return base.Channel.GetMyGiveFbTeamListAsync(userId, poeId, subscriptionid);
        }
        
        public SendYammerMessages.CommonService.UserPOEMapping[] GetMyReceiveFbTeam(int userId, int poeId, int subscriptionid) {
            return base.Channel.GetMyReceiveFbTeam(userId, poeId, subscriptionid);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping[]> GetMyReceiveFbTeamAsync(int userId, int poeId, int subscriptionid) {
            return base.Channel.GetMyReceiveFbTeamAsync(userId, poeId, subscriptionid);
        }
        
        public SendYammerMessages.CommonService.UserPOEMapping[] GetMyReceiveFbTeamList(int userId, int poeId, int subscriptionid) {
            return base.Channel.GetMyReceiveFbTeamList(userId, poeId, subscriptionid);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping[]> GetMyReceiveFbTeamListAsync(int userId, int poeId, int subscriptionid) {
            return base.Channel.GetMyReceiveFbTeamListAsync(userId, poeId, subscriptionid);
        }
        
        public SendYammerMessages.CommonService.UserPOEMapping[] GetMyManager(int userId, int poeId, int subscriptionid) {
            return base.Channel.GetMyManager(userId, poeId, subscriptionid);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping[]> GetMyManagerAsync(int userId, int poeId, int subscriptionid) {
            return base.Channel.GetMyManagerAsync(userId, poeId, subscriptionid);
        }
        
        public SendYammerMessages.CommonService.UserPOEMapping[] GetMyCustomers(int userId, int poeId, int subscriptionid) {
            return base.Channel.GetMyCustomers(userId, poeId, subscriptionid);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping[]> GetMyCustomersAsync(int userId, int poeId, int subscriptionid) {
            return base.Channel.GetMyCustomersAsync(userId, poeId, subscriptionid);
        }
        
        public SendYammerMessages.CommonService.UserPOEMapping[] GetMyPeers(int userId, int poeId, int subscriptionid) {
            return base.Channel.GetMyPeers(userId, poeId, subscriptionid);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping[]> GetMyPeersAsync(int userId, int poeId, int subscriptionid) {
            return base.Channel.GetMyPeersAsync(userId, poeId, subscriptionid);
        }
        
        public SendYammerMessages.CommonService.UserPOEMapping[] GetMyFullNetwork(int userId, int poeId, int subscriptionid) {
            return base.Channel.GetMyFullNetwork(userId, poeId, subscriptionid);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping[]> GetMyFullNetworkAsync(int userId, int poeId, int subscriptionid) {
            return base.Channel.GetMyFullNetworkAsync(userId, poeId, subscriptionid);
        }
        
        public SendYammerMessages.CommonService.UserPOEMapping[] GetNetworksUsersWall(int userId, int POEId, int subscriptionid) {
            return base.Channel.GetNetworksUsersWall(userId, POEId, subscriptionid);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping[]> GetNetworksUsersWallAsync(int userId, int POEId, int subscriptionid) {
            return base.Channel.GetNetworksUsersWallAsync(userId, POEId, subscriptionid);
        }
        
        public int GetMyNetworkCount(int userId, int poeId, int subscriptionid) {
            return base.Channel.GetMyNetworkCount(userId, poeId, subscriptionid);
        }
        
        public System.Threading.Tasks.Task<int> GetMyNetworkCountAsync(int userId, int poeId, int subscriptionid) {
            return base.Channel.GetMyNetworkCountAsync(userId, poeId, subscriptionid);
        }
        
        public SendYammerMessages.CommonService.User GetUserDetailsByEmailId(string emailId) {
            return base.Channel.GetUserDetailsByEmailId(emailId);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.User> GetUserDetailsByEmailIdAsync(string emailId) {
            return base.Channel.GetUserDetailsByEmailIdAsync(emailId);
        }
        
        public SendYammerMessages.CommonService.UserPOEMapping GetMyDetail(int userid, int poeid, int subscriptionid) {
            return base.Channel.GetMyDetail(userid, poeid, subscriptionid);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping> GetMyDetailAsync(int userid, int poeid, int subscriptionid) {
            return base.Channel.GetMyDetailAsync(userid, poeid, subscriptionid);
        }
        
        public SendYammerMessages.CommonService.UserPOEMapping GetMyDetailWithArea(int userid, int poeid, int subscriptionid) {
            return base.Channel.GetMyDetailWithArea(userid, poeid, subscriptionid);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping> GetMyDetailWithAreaAsync(int userid, int poeid, int subscriptionid) {
            return base.Channel.GetMyDetailWithAreaAsync(userid, poeid, subscriptionid);
        }
        
        public SendYammerMessages.CommonService.Country[] GetAllCounties() {
            return base.Channel.GetAllCounties();
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.Country[]> GetAllCountiesAsync() {
            return base.Channel.GetAllCountiesAsync();
        }
        
        public SendYammerMessages.CommonService.Zone[] GetAllArea() {
            return base.Channel.GetAllArea();
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.Zone[]> GetAllAreaAsync() {
            return base.Channel.GetAllAreaAsync();
        }
        
        public SendYammerMessages.CommonService.User GetUserPhoto(int userId) {
            return base.Channel.GetUserPhoto(userId);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.User> GetUserPhotoAsync(int userId) {
            return base.Channel.GetUserPhotoAsync(userId);
        }
        
        public bool UpdateUserPhoto(int userId, byte[] photo) {
            return base.Channel.UpdateUserPhoto(userId, photo);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserPhotoAsync(int userId, byte[] photo) {
            return base.Channel.UpdateUserPhotoAsync(userId, photo);
        }
        
        public bool UpdateUserDetails(string firstName, string lastName, string companyName, string jobTitle, int countryId, int userId, int areaId) {
            return base.Channel.UpdateUserDetails(firstName, lastName, companyName, jobTitle, countryId, userId, areaId);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserDetailsAsync(string firstName, string lastName, string companyName, string jobTitle, int countryId, int userId, int areaId) {
            return base.Channel.UpdateUserDetailsAsync(firstName, lastName, companyName, jobTitle, countryId, userId, areaId);
        }
        
        public bool UpdatePassword(string userName, string password) {
            return base.Channel.UpdatePassword(userName, password);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePasswordAsync(string userName, string password) {
            return base.Channel.UpdatePasswordAsync(userName, password);
        }
        
        public bool GetPassword(string emailAddress) {
            return base.Channel.GetPassword(emailAddress);
        }
        
        public System.Threading.Tasks.Task<bool> GetPasswordAsync(string emailAddress) {
            return base.Channel.GetPasswordAsync(emailAddress);
        }
        
        public bool CheckEmailId(string EmailId) {
            return base.Channel.CheckEmailId(EmailId);
        }
        
        public System.Threading.Tasks.Task<bool> CheckEmailIdAsync(string EmailId) {
            return base.Channel.CheckEmailIdAsync(EmailId);
        }
        
        public void UpdatePageMode(int userid, int status) {
            base.Channel.UpdatePageMode(userid, status);
        }
        
        public System.Threading.Tasks.Task UpdatePageModeAsync(int userid, int status) {
            return base.Channel.UpdatePageModeAsync(userid, status);
        }
        
        public string GetPoeName(int poeId) {
            return base.Channel.GetPoeName(poeId);
        }
        
        public System.Threading.Tasks.Task<string> GetPoeNameAsync(int poeId) {
            return base.Channel.GetPoeNameAsync(poeId);
        }
        
        public string GetPasswordForUSer(string emailid) {
            return base.Channel.GetPasswordForUSer(emailid);
        }
        
        public System.Threading.Tasks.Task<string> GetPasswordForUSerAsync(string emailid) {
            return base.Channel.GetPasswordForUSerAsync(emailid);
        }
        
        public int CheckMapping(int userId, int subscriptionid) {
            return base.Channel.CheckMapping(userId, subscriptionid);
        }
        
        public System.Threading.Tasks.Task<int> CheckMappingAsync(int userId, int subscriptionid) {
            return base.Channel.CheckMappingAsync(userId, subscriptionid);
        }
        
        public SendYammerMessages.CommonService.Network[] GetUserSubscriptions(string emailId) {
            return base.Channel.GetUserSubscriptions(emailId);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.Network[]> GetUserSubscriptionsAsync(string emailId) {
            return base.Channel.GetUserSubscriptionsAsync(emailId);
        }
        
        public SendYammerMessages.CommonService.Network[] GetMySubscription(string emailId) {
            return base.Channel.GetMySubscription(emailId);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.Network[]> GetMySubscriptionAsync(string emailId) {
            return base.Channel.GetMySubscriptionAsync(emailId);
        }
        
        public SendYammerMessages.CommonService.V3_GetMyActivitiesResult[] GetMyActivities(int userId, int subscriptionId, int sourceId) {
            return base.Channel.GetMyActivities(userId, subscriptionId, sourceId);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.V3_GetMyActivitiesResult[]> GetMyActivitiesAsync(int userId, int subscriptionId, int sourceId) {
            return base.Channel.GetMyActivitiesAsync(userId, subscriptionId, sourceId);
        }
        
        public SendYammerMessages.CommonService.V3_GetUserListByBatchIdResult[] GetUserList(string batchid, int userId) {
            return base.Channel.GetUserList(batchid, userId);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.V3_GetUserListByBatchIdResult[]> GetUserListAsync(string batchid, int userId) {
            return base.Channel.GetUserListAsync(batchid, userId);
        }
        
        public SendYammerMessages.CommonService.Network GetDefaultUserSubscription(string emailId) {
            return base.Channel.GetDefaultUserSubscription(emailId);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.Network> GetDefaultUserSubscriptionAsync(string emailId) {
            return base.Channel.GetDefaultUserSubscriptionAsync(emailId);
        }
        
        public SendYammerMessages.CommonService.Network GetOwnNetwork(string emailId) {
            return base.Channel.GetOwnNetwork(emailId);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.Network> GetOwnNetworkAsync(string emailId) {
            return base.Channel.GetOwnNetworkAsync(emailId);
        }
        
        public bool DeleteUser(int userid, int poeid, int subscriptionid, int level, int deleteId, int deletepeer) {
            return base.Channel.DeleteUser(userid, poeid, subscriptionid, level, deleteId, deletepeer);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(int userid, int poeid, int subscriptionid, int level, int deleteId, int deletepeer) {
            return base.Channel.DeleteUserAsync(userid, poeid, subscriptionid, level, deleteId, deletepeer);
        }
        
        public bool CreateActivity(int userid, string toids, int subid, int sourceid, string activity) {
            return base.Channel.CreateActivity(userid, toids, subid, sourceid, activity);
        }
        
        public System.Threading.Tasks.Task<bool> CreateActivityAsync(int userid, string toids, int subid, int sourceid, string activity) {
            return base.Channel.CreateActivityAsync(userid, toids, subid, sourceid, activity);
        }
        
        public bool SendConnectMail(int userid, string toids, int poeId) {
            return base.Channel.SendConnectMail(userid, toids, poeId);
        }
        
        public System.Threading.Tasks.Task<bool> SendConnectMailAsync(int userid, string toids, int poeId) {
            return base.Channel.SendConnectMailAsync(userid, toids, poeId);
        }
        
        public bool SendMailFromWall(int type, string fromname, string toIds, bool hasAttachment) {
            return base.Channel.SendMailFromWall(type, fromname, toIds, hasAttachment);
        }
        
        public System.Threading.Tasks.Task<bool> SendMailFromWallAsync(int type, string fromname, string toIds, bool hasAttachment) {
            return base.Channel.SendMailFromWallAsync(type, fromname, toIds, hasAttachment);
        }
        
        public SendYammerMessages.CommonService.UserPOEMapping[] GetMyUsers(int userId, int subscriptionid) {
            return base.Channel.GetMyUsers(userId, subscriptionid);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping[]> GetMyUsersAsync(int userId, int subscriptionid) {
            return base.Channel.GetMyUsersAsync(userId, subscriptionid);
        }
        
        public SendYammerMessages.CommonService.UserPOEMapping[] GetMyAllUsers(int userId, int subscriptionid) {
            return base.Channel.GetMyAllUsers(userId, subscriptionid);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping[]> GetMyAllUsersAsync(int userId, int subscriptionid) {
            return base.Channel.GetMyAllUsersAsync(userId, subscriptionid);
        }
        
        public SendYammerMessages.CommonService.Standing GetStanding(int poeid, int userid, int tileclicked, int subid, string domain) {
            return base.Channel.GetStanding(poeid, userid, tileclicked, subid, domain);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.Standing> GetStandingAsync(int poeid, int userid, int tileclicked, int subid, string domain) {
            return base.Channel.GetStandingAsync(poeid, userid, tileclicked, subid, domain);
        }
        
        public SendYammerMessages.CommonService.Standing GetStandingTileScore(int poeid, int userid, int subid, string domain) {
            return base.Channel.GetStandingTileScore(poeid, userid, subid, domain);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.Standing> GetStandingTileScoreAsync(int poeid, int userid, int subid, string domain) {
            return base.Channel.GetStandingTileScoreAsync(poeid, userid, subid, domain);
        }
        
        public SendYammerMessages.CommonService.UserRole[] GetUserRoles(int userid, int subid) {
            return base.Channel.GetUserRoles(userid, subid);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserRole[]> GetUserRolesAsync(int userid, int subid) {
            return base.Channel.GetUserRolesAsync(userid, subid);
        }
        
        public SendYammerMessages.CommonService.POE[] GetUserPoeByRole(int userid, int subid, int role) {
            return base.Channel.GetUserPoeByRole(userid, subid, role);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.POE[]> GetUserPoeByRoleAsync(int userid, int subid, int role) {
            return base.Channel.GetUserPoeByRoleAsync(userid, subid, role);
        }
        
        public SendYammerMessages.CommonService.POE[] GetUserPoeByType(int userid, int subid, int type) {
            return base.Channel.GetUserPoeByType(userid, subid, type);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.POE[]> GetUserPoeByTypeAsync(int userid, int subid, int type) {
            return base.Channel.GetUserPoeByTypeAsync(userid, subid, type);
        }
        
        public bool SaveGoal(SendYammerMessages.CommonService.GoalShare goals) {
            return base.Channel.SaveGoal(goals);
        }
        
        public System.Threading.Tasks.Task<bool> SaveGoalAsync(SendYammerMessages.CommonService.GoalShare goals) {
            return base.Channel.SaveGoalAsync(goals);
        }
        
        public bool SaveGoals(SendYammerMessages.CommonService.GoalShare[] goalShares) {
            return base.Channel.SaveGoals(goalShares);
        }
        
        public System.Threading.Tasks.Task<bool> SaveGoalsAsync(SendYammerMessages.CommonService.GoalShare[] goalShares) {
            return base.Channel.SaveGoalsAsync(goalShares);
        }
        
        public bool AssignPoe(SendYammerMessages.CommonService.AssignPoe[] assignpoe1) {
            return base.Channel.AssignPoe(assignpoe1);
        }
        
        public System.Threading.Tasks.Task<bool> AssignPoeAsync(SendYammerMessages.CommonService.AssignPoe[] assignpoe) {
            return base.Channel.AssignPoeAsync(assignpoe);
        }
        
        public SendYammerMessages.CommonService.ModulesGoal[] GetMyGoals(int poeId, int userid) {
            return base.Channel.GetMyGoals(poeId, userid);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.ModulesGoal[]> GetMyGoalsAsync(int poeId, int userid) {
            return base.Channel.GetMyGoalsAsync(poeId, userid);
        }
        
        public SendYammerMessages.CommonService.UserPOEMapping GetUserdetailsByMappingId(int mappingid) {
            return base.Channel.GetUserdetailsByMappingId(mappingid);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping> GetUserdetailsByMappingIdAsync(int mappingid) {
            return base.Channel.GetUserdetailsByMappingIdAsync(mappingid);
        }
        
        public SendYammerMessages.CommonService.UserPOEMapping GetUserDetailsByFbId(int fbId) {
            return base.Channel.GetUserDetailsByFbId(fbId);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.UserPOEMapping> GetUserDetailsByFbIdAsync(int fbId) {
            return base.Channel.GetUserDetailsByFbIdAsync(fbId);
        }
        
        public SendYammerMessages.CommonService.CreatedFeedback[] GetFeedbacksByGroupId(string groupid) {
            return base.Channel.GetFeedbacksByGroupId(groupid);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.CreatedFeedback[]> GetFeedbacksByGroupIdAsync(string groupid) {
            return base.Channel.GetFeedbacksByGroupIdAsync(groupid);
        }
        
        public SendYammerMessages.CommonService.User[] GetSubscribedUserWall(int userid, int subId) {
            return base.Channel.GetSubscribedUserWall(userid, subId);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.User[]> GetSubscribedUserWallAsync(int userid, int subId) {
            return base.Channel.GetSubscribedUserWallAsync(userid, subId);
        }
        
        public SendYammerMessages.CommonService.SyncScoreCollection GetSyncScores(int userid, int poeid, int subid, int usermapping, int type) {
            return base.Channel.GetSyncScores(userid, poeid, subid, usermapping, type);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.SyncScoreCollection> GetSyncScoresAsync(int userid, int poeid, int subid, int usermapping, int type) {
            return base.Channel.GetSyncScoresAsync(userid, poeid, subid, usermapping, type);
        }
        
        public SendYammerMessages.CommonService.SyncScoreCollection GetSyncScoresOverall(int userid, int poeid, int subid, int usermapping, int type) {
            return base.Channel.GetSyncScoresOverall(userid, poeid, subid, usermapping, type);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.SyncScoreCollection> GetSyncScoresOverallAsync(int userid, int poeid, int subid, int usermapping, int type) {
            return base.Channel.GetSyncScoresOverallAsync(userid, poeid, subid, usermapping, type);
        }
        
        public SendYammerMessages.CommonService.SyncScoreCollection GetAvgSyncScores(int userid, int poeid, int subid, int type) {
            return base.Channel.GetAvgSyncScores(userid, poeid, subid, type);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.SyncScoreCollection> GetAvgSyncScoresAsync(int userid, int poeid, int subid, int type) {
            return base.Channel.GetAvgSyncScoresAsync(userid, poeid, subid, type);
        }
        
        public SendYammerMessages.CommonService.SyncScoreCollection GetSyncScoresByFbId(int userid, int poeid, int subid, int usermapping, int type, int fbid) {
            return base.Channel.GetSyncScoresByFbId(userid, poeid, subid, usermapping, type, fbid);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.SyncScoreCollection> GetSyncScoresByFbIdAsync(int userid, int poeid, int subid, int usermapping, int type, int fbid) {
            return base.Channel.GetSyncScoresByFbIdAsync(userid, poeid, subid, usermapping, type, fbid);
        }
        
        public SendYammerMessages.CommonService.SyncScoreCollection GetSyncTeamScore(int userid, int poeid, int subid, int type, string groupid, int mappingid) {
            return base.Channel.GetSyncTeamScore(userid, poeid, subid, type, groupid, mappingid);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.SyncScoreCollection> GetSyncTeamScoreAsync(int userid, int poeid, int subid, int type, string groupid, int mappingid) {
            return base.Channel.GetSyncTeamScoreAsync(userid, poeid, subid, type, groupid, mappingid);
        }
        
        public SendYammerMessages.CommonService.SyncScoreCollection GetAvgSyncScoresByFbId(int userid, int poeid, int subid, int type, string fbids) {
            return base.Channel.GetAvgSyncScoresByFbId(userid, poeid, subid, type, fbids);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.SyncScoreCollection> GetAvgSyncScoresByFbIdAsync(int userid, int poeid, int subid, int type, string fbids) {
            return base.Channel.GetAvgSyncScoresByFbIdAsync(userid, poeid, subid, type, fbids);
        }
        
        public SendYammerMessages.CommonService.SyncWcsiDiff GetSyncWcsiDiff(int userid, int poeid, int subid) {
            return base.Channel.GetSyncWcsiDiff(userid, poeid, subid);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.SyncWcsiDiff> GetSyncWcsiDiffAsync(int userid, int poeid, int subid) {
            return base.Channel.GetSyncWcsiDiffAsync(userid, poeid, subid);
        }
        
        public SendYammerMessages.CommonService.Plan GetPlanById(int planId) {
            return base.Channel.GetPlanById(planId);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.Plan> GetPlanByIdAsync(int planId) {
            return base.Channel.GetPlanByIdAsync(planId);
        }
        
        public void SendPoePdfNotification(string emailContents, string subject) {
            base.Channel.SendPoePdfNotification(emailContents, subject);
        }
        
        public System.Threading.Tasks.Task SendPoePdfNotificationAsync(string emailContents, string subject) {
            return base.Channel.SendPoePdfNotificationAsync(emailContents, subject);
        }
        
        public SendYammerMessages.CommonService.ManagerReports[] GenerateManagerReport(int poeid) {
            return base.Channel.GenerateManagerReport(poeid);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.ManagerReports[]> GenerateManagerReportAsync(int poeid) {
            return base.Channel.GenerateManagerReportAsync(poeid);
        }
        
        public SendYammerMessages.CommonService.TeamReports[] GenerateTeamReport(int poeid) {
            return base.Channel.GenerateTeamReport(poeid);
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.TeamReports[]> GenerateTeamReportAsync(int poeid) {
            return base.Channel.GenerateTeamReportAsync(poeid);
        }
        
        public void InsertYammerContent(string tomailid, string frmMailid, string imageurl, string subject, string groupid, string desc, string yammertoken) {
            base.Channel.InsertYammerContent(tomailid, frmMailid, imageurl, subject, groupid, desc, yammertoken);
        }
        
        public System.Threading.Tasks.Task InsertYammerContentAsync(string tomailid, string frmMailid, string imageurl, string subject, string groupid, string desc, string yammertoken) {
            return base.Channel.InsertYammerContentAsync(tomailid, frmMailid, imageurl, subject, groupid, desc, yammertoken);
        }
        
        public SendYammerMessages.CommonService.YammerContent[] GetYammerTopContent() {
            return base.Channel.GetYammerTopContent();
        }
        
        public System.Threading.Tasks.Task<SendYammerMessages.CommonService.YammerContent[]> GetYammerTopContentAsync() {
            return base.Channel.GetYammerTopContentAsync();
        }
        
        public void UpdateYammercontent(int id) {
            base.Channel.UpdateYammercontent(id);
        }
        
        public System.Threading.Tasks.Task UpdateYammercontentAsync(int id) {
            return base.Channel.UpdateYammercontentAsync(id);
        }
    }
}
